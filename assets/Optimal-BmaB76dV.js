import{D as y,k as h,E as $,f as m,u as w,G as x,w as u,a as e,s as k,v as R,c as F,j as I,F as C,z as A,e as p,J as a,o,y as M}from"./index-BPLYBXn0.js";import{_ as N,r as T}from"./virtual-memory-management-DzmNOk5B.js";import{_ as S}from"./Alert-BZkqOsyQ.js";import{_ as B,a as c,b as O,c as W}from"./EmptySpace-Bg4j2VIO.js";const q={class:"mb-10 space-y-4"},D={class:"mb-10 space-y-4"},U={class:"flex items-end gap-x-4"},z={class:"flex flex-col flex-1 gap-y-2"},E=["disabled"],H={class:"space-y-4 overflow-x-auto"},j=["onUpdate:modelValue"],G={class:"w-20 mx-auto text-center"},Y={__name:"Optimal",setup(J){const i=y({log:null,totalPageFaults:null}),s=y([1,2,3,4,2,1,5,2,4,5,3,5]),r=h(3),g=h(null),d=h(!1);$([s,r],()=>{d.value=!1});const V=()=>{const n=Math.round(Math.random()*9+1);s.push(n)},P=n=>{s.splice(n,1)},v=async()=>{if(!g.value.checkValidity())return g.value.reportValidity();d.value=!0;const{log:t,totalPageFaults:l}=T(s.slice(),r.value,"optimal");i.log=t,i.totalPageFaults=l};return(n,t)=>(o(),m(O,null,{[w(x).howItWorks.id]:u(()=>[e("div",q,[t[12]||(t[12]=e("p",null,[a(" The "),e("span",{class:"text-main"},"optimal (MIN)"),a(" page replacement algorithm is used in virtual memory management as a benchmarking algorithm. Its purpose is to choose a suitable "),e("span",{class:"text-main"},"victim page"),a(" to swap with the newly requested page. ")],-1)),e("p",null,[t[5]||(t[5]=a(" To understand the concept behind ")),t[6]||(t[6]=e("span",{class:"text-main"},"virtual memory",-1)),t[7]||(t[7]=a(" and ")),t[8]||(t[8]=e("span",{class:"text-main"},"paging",-1)),t[9]||(t[9]=a(", see the ")),e("span",{onClick:t[0]||(t[0]=l=>n.$router.push("/virtual-memory-management/first-in-first-out")),class:"cursor-pointer text-main"},"first in first out (FIFO)"),t[10]||(t[10]=a(" page replacement algorithm, with a full guide to how virtual memory operates. "))]),t[13]||(t[13]=e("h2",{class:"mt-10 text-xl font-semibold"}," Optimal (MIN) Page Replacement Algorithm ",-1)),t[14]||(t[14]=e("hr",{class:"mb-4 border-neutral-800"},null,-1)),t[15]||(t[15]=e("p",null," The optimal algorithm is by far the most efficient page replacement algorithm. It has the least amount of page faults amongst all other page replacement algorithms. ",-1)),p(S,{alertStyle:"warning"},{default:u(()=>t[11]||(t[11]=[e("p",null," Although the optimal algorithm is the most efficient algorithm, it isn't realistic to implement, as it needs to know which pages are going to be requested in the future. However, it is still used as a benchmarking algorithm. ",-1)])),_:1,__:[11]}),t[16]||(t[16]=e("p",null,[a(" When a "),e("span",{class:"text-main"},"page fault"),a(" occurs, the optimal algorithm chooses the page that won't be used for the longest time in the future as the "),e("span",{class:"text-main"},"victim page"),a(". For example, take the following reference string, with the RAM divided into 3 frames: ")],-1)),p(c,{src:"/algorithms/virtual-memory-management/optimal/sample-ref-string-with-frames.svg",caption:"Sample Reference String With 3 Frames.",class:"max-w-lg"}),t[17]||(t[17]=e("p",null,[a(" The first 3 pages have already been loaded into the RAM. When the 4th page is requested and a "),e("span",{class:"text-main"},"page fault"),a(" occurs, the optimal algorithm scans the reference string from the current position onwards, looking for the first occurences of the pages that are in the current frame. The last occuring one (page 3) will be the "),e("span",{class:"text-main"},"victim page"),a(". ")],-1)),p(c,{src:"/algorithms/virtual-memory-management/optimal/optimal-primary.svg",caption:"How the Optimal Algorithm Operates.",class:"max-w-xl"}),t[18]||(t[18]=e("p",null," If there is no occurence of a certain page in the current frame, the algorithm instantly picks it as the victim page. Since it does not appear again in the reference string, it is no longer needed to be kept in the RAM. The following diagram demonstrates the optimal algorithm for the new current frame: ",-1)),p(c,{src:"/algorithms/virtual-memory-management/optimal/optimal-secondary.svg",caption:"Picking a Nonreoccurring Page as the Victim Page.",class:"max-w-xl"})])]),[w(x).visualizer.id]:u(()=>[e("div",D,[t[22]||(t[22]=e("h1",{class:"mb-4 text-xl font-semibold"}," Step By Step Illustration ",-1)),t[23]||(t[23]=e("hr",{class:"mb-4 border-neutral-800"},null,-1)),e("form",{class:"space-y-4",ref_key:"form",ref:g},[e("div",U,[e("div",z,[t[19]||(t[19]=e("label",{class:"font-medium"},"Number of Frames:",-1)),k(e("input",{type:"number",class:"w-full field sm:w-60",min:"1",max:"5","onUpdate:modelValue":t[1]||(t[1]=l=>r.value=l)},null,512),[[R,r.value]])]),e("button",{type:"button",class:"btn",onClick:t[2]||(t[2]=l=>V()),disabled:s.length===12},"Add Row",8,E)]),e("div",H,[e("table",null,[t[20]||(t[20]=e("thead",null,[e("tr",null,[e("th",null,"Page ID"),e("th")])],-1)),e("tbody",null,[(o(!0),F(C,null,I(s,(l,f)=>(o(),F("tr",null,[e("td",null,[k(e("input",{type:"number",min:"1",max:"10","onUpdate:modelValue":b=>s[f]=b},null,8,j),[[R,s[f]]])]),e("td",G,[s.length>1?(o(),m(W,{key:0,onClick:b=>P(f)},null,8,["onClick"])):M("",!0)])]))),256))])]),e("button",{type:"submit",class:"btn",onClick:t[3]||(t[3]=A(l=>v(),["prevent"]))},"Run Algorithm")])],512),t[24]||(t[24]=e("h2",{class:"mt-10 text-xl font-semibold"}," Results ",-1)),t[25]||(t[25]=e("hr",{class:"mb-4 border-neutral-800"},null,-1)),d.value?(o(),m(N,{key:0,"frame-count":r.value,log:i.log,"reference-str":s,"total-page-faults":i.totalPageFaults},null,8,["frame-count","log","reference-str","total-page-faults"])):(o(),m(B,{key:1},{default:u(()=>[t[21]||(t[21]=e("p",{class:"mb-4"}," No results to display yet, try running the algorithm... ",-1)),e("button",{onClick:t[4]||(t[4]=A(()=>v(),["prevent"])),class:"btn"}," Run Algorithm ")]),_:1,__:[21]}))])]),_:2},1024))}};export{Y as default};
