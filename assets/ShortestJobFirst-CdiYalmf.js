import{r as v,a as R,c as f,b as a,u as i,t as w,d as m,e,j as k,g as p,h as x,i as U,F as j,k as C,l as r,o as n,m as J,f as F,v as P}from"./index-BVlDhJo8.js";import{_ as L,a as N,b as _,c as D}from"./TrashButton-Cgl2hxQH.js";import{_ as M,a as O}from"./ProcessDetails-DJSXGj4t.js";import{_ as z}from"./Alert-ZlMgio0J.js";import{u as E}from"./useScheduler-hEsqip5Y.js";const W={class:"mb-10 space-y-4"},H={class:"mb-10 space-y-4"},Q={class:"flex items-end gap-4"},Z={class:"flex flex-wrap justify-end w-full gap-2"},G=["disabled"],K={class:"overflow-x-scroll"},X={class:"highlight-first-column"},Y=["onUpdate:modelValue"],ee=["onUpdate:modelValue"],te={class:"w-20 mx-auto text-center"},se=6,ae={__name:"ShortestJobFirst",setup(oe){const c=v(null),o=R([[0,4],[0,6],[0,4],[0,5]]),u=v(!1),S=f(()=>{let s=1;return o.slice().map(t=>[s++,...t,t[1]])}),g=f(()=>({runtimeProcesses:S,form:c,hasAlgorithmBeenRan:u,sortFn:(t,l)=>t[2]-l[2]})),{runAlgorithm:b,resetAlgorithmResults:y,queueLog:q,processLog:A,finishedProcesses:T}=E(),$=f(()=>{const s=Object.groupBy(q,t=>t[0]);return Object.values(s)}),B=()=>{y(u);const t=[o[o.length-1][0]+1,Math.round(Math.random()*10)];o.push(t)},V=s=>{y(u),o.splice(s,1)},I=()=>{o.forEach(s=>{s[0]=0})};return(s,t)=>(n(),a(_,null,{[i(w).howItWorks.id]:m(()=>[e("div",W,[t[10]||(t[10]=e("p",null,[e("span",{class:"text-main"},"Shortest Job First (SJF) Scheduling"),r(" is an algorithm used by systems to schedule the order by which processes are ran by the CPU. As the name suggests, the processes which require the shortest amount of time to complete (lowest burst time) are the ones which will be ran first. ")],-1)),e("p",null,[t[4]||(t[4]=r(" Prior knowledge of the ")),e("span",{class:"cursor-pointer text-main",onClick:t[0]||(t[0]=l=>s.$router.push("/cpu-scheduling/priority"))},"priority scheduling algorithm"),t[5]||(t[5]=r(" is recommended, as SJF scheduling works exactly like priority scheduling, with the exception that the priority given to processes is based on their ")),t[6]||(t[6]=e("span",{class:"text-main"},"burst time.",-1))]),t[11]||(t[11]=e("h2",{class:"mt-10 text-xl font-semibold"}," How the Algorithm Works ",-1)),t[12]||(t[12]=e("hr",{class:"mb-4 border-neutral-800"},null,-1)),t[13]||(t[13]=e("p",null," SJF scheduling uses a priority queue internally to keep track of which processes to run first. The only difference is that processes do not get an individual priority, but rather their priority is dependent on their burst time. ",-1)),t[14]||(t[14]=e("p",null," Consider the following processes. For simplicity, it is assumed that all of them arrive at the same time: ",-1)),t[15]||(t[15]=e("table",null,[e("thead",null,[e("tr",null,[e("th",null,"Process ID:"),e("th",null,"Burst Time:"),e("th",null,"Priority (based on burst time):")])]),e("tbody",null,[e("tr",null,[e("td",null,"P1"),e("td",null,"8"),e("td",null,"2")]),e("tr",null,[e("td",null,"P2"),e("td",null,"9"),e("td",null,"3")]),e("tr",null,[e("td",null,"P3"),e("td",null,"3"),e("td",null,"1")])])],-1)),t[16]||(t[16]=e("p",null," As shown, process 2 (P2) has the highest burst time, therefore it gets the lowest priority (3). On the other hand, process 1 (P1) has the lowest burst time, therefore it gets the highest priority (1). ",-1)),t[17]||(t[17]=e("p",null," The following diagram shows how these processes would be placed inside of the priority queue: ",-1)),C(N,{src:"/algorithms/cpu-scheduling/sjf/items-entering-priority-queue.svg",class:"max-w-2xs"}),C(z,{alertStyle:"note"},{default:m(()=>t[7]||(t[7]=[e("div",{class:"space-y-4"},[e("p",null," This algorithm is considered to be one of the best in terms of waiting time, however it requires knowledge of each process's burst time in advanced; this isn't always possible in real-world systems. "),e("p",null,[r(" The algorithm may also cause "),e("span",{class:"text-main"},"starvation"),r(": longer processes may never get picked if shorter ones keep arriving. ")])],-1)])),_:1,__:[7]}),t[18]||(t[18]=e("p",null,[r(" The rest of the algorithm is identical to the "),e("span",{class:"text-main"},"first-come first-serve (FCFS)"),r(" algorithm, processes are taken out of the queue one by one and processed by the CPU until they are finished. If there are no more processes in the queue, the system is idle until another process needs to be executed. ")],-1)),e("p",null,[t[8]||(t[8]=r(" For an in-depth guide, see the ")),e("span",{class:"cursor-pointer text-main",onClick:t[1]||(t[1]=l=>s.$router.push("/cpu-scheduling/first-come-first-serve"))},"first-come first-serve (FCFS) algorithm"),t[9]||(t[9]=r(". "))])])]),[i(w).visualizer.id]:m(()=>[e("div",H,[t[21]||(t[21]=e("h1",{class:"mb-4 text-xl font-semibold"}," Step By Step Illustration ",-1)),t[22]||(t[22]=e("hr",{class:"mb-4 border-neutral-800"},null,-1)),e("form",{ref_key:"form",ref:c,class:"w-full space-y-4 gap-x-4"},[e("div",Q,[e("div",Z,[e("button",{class:"btn",type:"button",onClick:p(I,["prevent"])}," Set All Arrival Times to Zero "),e("button",{class:"btn",type:"button",onClick:p(B,["prevent"]),disabled:o.length===se}," Add Row ",8,G)])]),e("div",K,[e("table",null,[t[19]||(t[19]=e("thead",null,[e("tr",null,[e("th",null,"Process"),e("th",null,"Arrival Time"),e("th",null,"Burst Time"),e("th")])],-1)),e("tbody",X,[(n(!0),x(j,null,U(o,(l,h)=>(n(),x("tr",{key:h},[e("td",null," P"+J(h+1),1),e("td",null,[F(e("input",{type:"number",min:"0",max:"10",required:"","onUpdate:modelValue":d=>l[0]=d},null,8,Y),[[P,l[0]]])]),e("td",null,[F(e("input",{type:"number",min:"1",max:"20",required:"","onUpdate:modelValue":d=>l[1]=d},null,8,ee),[[P,l[1]]])]),e("td",te,[o.length>1?(n(),a(D,{key:0,onClick:d=>V(h)},null,8,["onClick"])):k("",!0)])]))),128))])])]),e("button",{onClick:t[2]||(t[2]=p(()=>i(b)(g.value),["prevent"])),class:"btn",type:"submit"}," Run Algorithm ")],512),u.value?(n(),a(M,{key:0,"process-log":i(A),"queue-log":$.value,quantum:1},null,8,["process-log","queue-log"])):k("",!0),u.value?(n(),a(O,{key:1,"process-data":o,"finished-processes":i(T)},null,8,["process-data","finished-processes"])):(n(),a(L,{key:2},{default:m(()=>[t[20]||(t[20]=e("p",{class:"mb-4"}," No results to display yet, try running the algorithm... ",-1)),e("button",{onClick:t[3]||(t[3]=p(()=>i(b)(g.value),["prevent"])),class:"btn"}," Run Algorithm ")]),_:1,__:[20]}))])]),_:2},1024))}};export{ae as default};
