var We=Object.defineProperty;var Me=(c,u,d)=>u in c?We(c,u,{enumerable:!0,configurable:!0,writable:!0,value:d}):c[u]=d;var z=(c,u,d)=>Me(c,typeof u!="symbol"?u+"":u,d);import{d as Fe,c as D,o as b,a as S,_ as re,b as Ie,e as A,w as Q,f as W,r as Ke,u as H,g as Je,I as K,t as xe,i as Ze,h as Ce,C as Xe,F as qe,j as Pe,k as F,l as ge,p as Ye,m as er,n as rr,q as tr,s as ar,S as sr,v as nr,x as or,y as ir,T as cr,z as ur}from"./index-CMEMORM0.js";const hr={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},dr=Fe({name:"ArrowRightAltRound",render:function(u,d){return b(),D("svg",hr,d[0]||(d[0]=[S("path",{d:"M16.01 11H5c-.55 0-1 .45-1 1s.45 1 1 1h11.01v1.79c0 .45.54.67.85.35l2.78-2.79c.19-.2.19-.51 0-.71l-2.78-2.79c-.31-.32-.85-.09-.85.35V11z",fill:"currentColor"},null,-1)]))}});function U(){function c(u){return new Promise(d=>{let P=new XMLHttpRequest;P.open(u.method,u.url,!0),Object.keys(u.headers).forEach(t=>P.setRequestHeader(t,u.headers[t]));let w=(t,e)=>setTimeout(()=>{P.abort(),d({status:0,content:e,isTimedOut:!0})},t),q=w(u.connectTimeout,"Connection timeout"),l;P.onreadystatechange=()=>{P.readyState>P.OPENED&&l===void 0&&(clearTimeout(q),l=w(u.responseTimeout,"Socket timeout"))},P.onerror=()=>{P.status===0&&(clearTimeout(q),clearTimeout(l),d({content:P.responseText||"Network request failed",status:P.status,isTimedOut:!1}))},P.onload=()=>{clearTimeout(q),clearTimeout(l),d({content:P.responseText,status:P.status,isTimedOut:!1})},P.send(u.data)})}return{send:c}}function _(c){let u;const d=`algolia-client-js-${c.key}`;function P(){return u===void 0&&(u=c.localStorage||window.localStorage),u}function w(){return JSON.parse(P().getItem(d)||"{}")}function q(t){P().setItem(d,JSON.stringify(t))}function l(){const t=c.timeToLive?c.timeToLive*1e3:null,e=w(),r=Object.fromEntries(Object.entries(e).filter(([,s])=>s.timestamp!==void 0));if(q(r),!t)return;const a=Object.fromEntries(Object.entries(r).filter(([,s])=>{const o=new Date().getTime();return!(s.timestamp+t<o)}));q(a)}return{get(t,e,r={miss:()=>Promise.resolve()}){return Promise.resolve().then(()=>(l(),w()[JSON.stringify(t)])).then(a=>Promise.all([a?a.value:e(),a!==void 0])).then(([a,s])=>Promise.all([a,s||r.miss(a)])).then(([a])=>a)},set(t,e){return Promise.resolve().then(()=>{const r=w();return r[JSON.stringify(t)]={timestamp:new Date().getTime(),value:e},P().setItem(d,JSON.stringify(r)),e})},delete(t){return Promise.resolve().then(()=>{const e=w();delete e[JSON.stringify(t)],P().setItem(d,JSON.stringify(e))})},clear(){return Promise.resolve().then(()=>{P().removeItem(d)})}}}function lr(){return{get(c,u,d={miss:()=>Promise.resolve()}){return u().then(w=>Promise.all([w,d.miss(w)])).then(([w])=>w)},set(c,u){return Promise.resolve(u)},delete(c){return Promise.resolve()},clear(){return Promise.resolve()}}}function C(c){const u=[...c.caches],d=u.shift();return d===void 0?lr():{get(P,w,q={miss:()=>Promise.resolve()}){return d.get(P,w,q).catch(()=>C({caches:u}).get(P,w,q))},set(P,w){return d.set(P,w).catch(()=>C({caches:u}).set(P,w))},delete(P){return d.delete(P).catch(()=>C({caches:u}).delete(P))},clear(){return d.clear().catch(()=>C({caches:u}).clear())}}}function T(c={serializable:!0}){let u={};return{get(d,P,w={miss:()=>Promise.resolve()}){const q=JSON.stringify(d);if(q in u)return Promise.resolve(c.serializable?JSON.parse(u[q]):u[q]);const l=P();return l.then(t=>w.miss(t)).then(()=>l)},set(d,P){return u[JSON.stringify(d)]=c.serializable?JSON.stringify(P):P,Promise.resolve(P)},delete(d){return delete u[JSON.stringify(d)],Promise.resolve()},clear(){return u={},Promise.resolve()}}}function mr(c){const u={value:`Algolia for JavaScript (${c})`,add(d){const P=`; ${d.segment}${d.version!==void 0?` (${d.version})`:""}`;return u.value.indexOf(P)===-1&&(u.value=`${u.value}${P}`),u}};return u}function N(c,u,d="WithinHeaders"){const P={"x-algolia-api-key":u,"x-algolia-application-id":c};return{headers(){return d==="WithinHeaders"?P:{}},queryParameters(){return d==="WithinQueryParameters"?P:{}}}}function B({func:c,validate:u,aggregator:d,error:P,timeout:w=()=>0}){const q=l=>new Promise((t,e)=>{c(l).then(async r=>(d&&await d(r),await u(r)?t(r):P&&await P.validate(r)?e(new Error(await P.message(r))):setTimeout(()=>{q(r).then(t).catch(e)},await w()))).catch(r=>{e(r)})});return q()}function j({algoliaAgents:c,client:u,version:d}){const P=mr(d).add({segment:u,version:d});return c.forEach(w=>P.add(w)),P}function G(){return{debug(c,u){return Promise.resolve()},info(c,u){return Promise.resolve()},error(c,u){return Promise.resolve()}}}var we=2*60*1e3;function fe(c,u="up"){const d=Date.now();function P(){return u==="up"||Date.now()-d>we}function w(){return u==="timed out"&&Date.now()-d<=we}return{...c,status:u,lastUpdate:d,isUp:P,isTimedOut:w}}var ke=class extends Error{constructor(u,d){super(u);z(this,"name","AlgoliaError");d&&(this.name=d)}},De=class extends ke{constructor(u,d,P){super(u,P);z(this,"stackTrace");this.stackTrace=d}},qr=class extends De{constructor(c){super("Unreachable hosts - your application id may be incorrect. If the error persists, please reach out to the Algolia Support team: https://alg.li/support.",c,"RetryError")}},J=class extends De{constructor(u,d,P,w="ApiError"){super(u,P,w);z(this,"status");this.status=d}},Pr=class extends ke{constructor(u,d){super(u,"DeserializationError");z(this,"response");this.response=d}},gr=class extends J{constructor(u,d,P,w){super(u,d,w,"DetailedApiError");z(this,"error");this.error=P}};function Re(c){const u=c;for(let d=c.length-1;d>0;d--){const P=Math.floor(Math.random()*(d+1)),w=c[d];u[d]=c[P],u[P]=w}return u}function wr(c,u,d){const P=fr(d);let w=`${c.protocol}://${c.url}${c.port?`:${c.port}`:""}/${u.charAt(0)==="/"?u.substring(1):u}`;return P.length&&(w+=`?${P}`),w}function fr(c){return Object.keys(c).filter(u=>c[u]!==void 0).sort().map(u=>`${u}=${encodeURIComponent(Object.prototype.toString.call(c[u])==="[object Array]"?c[u].join(","):c[u]).replace(/\+/g,"%20")}`).join("&")}function pr(c,u){if(c.method==="GET"||c.data===void 0&&u.data===void 0)return;const d=Array.isArray(c.data)?c.data:{...c.data,...u.data};return JSON.stringify(d)}function yr(c,u,d){const P={Accept:"application/json",...c,...u,...d},w={};return Object.keys(P).forEach(q=>{const l=P[q];w[q.toLowerCase()]=l}),w}function Er(c){try{return JSON.parse(c.content)}catch(u){throw new Pr(u.message,c)}}function vr({content:c,status:u},d){try{const P=JSON.parse(c);return"error"in P?new gr(P.message,u,P.error,d):new J(P.message,u,d)}catch{}return new J(c,u,d)}function Tr({isTimedOut:c,status:u}){return!c&&~~u===0}function Sr({isTimedOut:c,status:u}){return c||Tr({isTimedOut:c,status:u})||~~(u/100)!==2&&~~(u/100)!==4}function br({status:c}){return~~(c/100)===2}function Ir(c){return c.map(u=>Ae(u))}function Ae(c){const u=c.request.headers["x-algolia-api-key"]?{"x-algolia-api-key":"*****"}:{};return{...c,request:{...c.request,headers:{...c.request.headers,...u}}}}function $({hosts:c,hostsCache:u,baseHeaders:d,logger:P,baseQueryParameters:w,algoliaAgent:q,timeouts:l,requester:t,requestsCache:e,responsesCache:r}){async function a(n){const i=await Promise.all(n.map(y=>u.get(y,()=>Promise.resolve(fe(y))))),h=i.filter(y=>y.isUp()),m=i.filter(y=>y.isTimedOut()),g=[...h,...m];return{hosts:g.length>0?g:n,getTimeout(y,p){return(m.length===0&&y===0?1:m.length+3+y)*p}}}async function s(n,i,h=!0){const m=[],g=pr(n,i),f=yr(d,n.headers,i.headers),y=n.method==="GET"?{...n.data,...i.data}:{},p={...w,...n.queryParameters,...y};if(q.value&&(p["x-algolia-agent"]=q.value),i&&i.queryParameters)for(const x of Object.keys(i.queryParameters))!i.queryParameters[x]||Object.prototype.toString.call(i.queryParameters[x])==="[object Object]"?p[x]=i.queryParameters[x]:p[x]=i.queryParameters[x].toString();let E=0;const v=async(x,Z)=>{const L=x.pop();if(L===void 0)throw new qr(Ir(m));const X={...l,...i.timeouts},de={data:g,headers:f,method:n.method,url:wr(L,n.path,p),connectTimeout:Z(E,X.connect),responseTimeout:Z(E,h?X.read:X.write)},le=Y=>{const me={request:de,response:Y,host:L,triesLeft:x.length};return m.push(me),me},O=await t.send(de);if(Sr(O)){const Y=le(O);return O.isTimedOut&&E++,P.info("Retryable failure",Ae(Y)),await u.set(L,fe(L,O.isTimedOut?"timed out":"down")),v(x,Z)}if(br(O))return Er(O);throw le(O),vr(O,m)},I=c.filter(x=>x.accept==="readWrite"||(h?x.accept==="read":x.accept==="write")),V=await a(I);return v([...V.hosts].reverse(),V.getTimeout)}function o(n,i={}){const h=n.useReadTransporter||n.method==="GET";if(!h)return s(n,i,h);const m=()=>s(n,i);if((i.cacheable||n.cacheable)!==!0)return m();const f={request:n,requestOptions:i,transporter:{queryParameters:w,headers:d}};return r.get(f,()=>e.get(f,()=>e.set(f,m()).then(y=>Promise.all([e.delete(f),y]),y=>Promise.all([e.delete(f),Promise.reject(y)])).then(([y,p])=>p)),{miss:y=>r.set(f,y)})}return{hostsCache:u,requester:t,timeouts:l,logger:P,algoliaAgent:q,baseHeaders:d,baseQueryParameters:w,hosts:c,request:o,requestsCache:e,responsesCache:r}}var te="1.1.0",pe=["de","us"];function xr(c){return[{url:c?"analytics.{region}.algolia.com".replace("{region}",c):"analytics.algolia.com",accept:"readWrite",protocol:"https"}]}function Cr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:xr(w),...q,algoliaAgent:j({algoliaAgents:P,client:"AbtestingV3",version:te}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},addABTests(e,r){if(!e)throw new Error("Parameter `addABTestsRequest` is required when calling `addABTests`.");if(!e.name)throw new Error("Parameter `addABTestsRequest.name` is required when calling `addABTests`.");if(!e.variants)throw new Error("Parameter `addABTestsRequest.variants` is required when calling `addABTests`.");if(!e.metrics)throw new Error("Parameter `addABTestsRequest.metrics` is required when calling `addABTests`.");if(!e.endAt)throw new Error("Parameter `addABTestsRequest.endAt` is required when calling `addABTests`.");const n={method:"POST",path:"/3/abtests",queryParameters:{},headers:{},data:e};return t.request(n,r)},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `deleteABTest`.");const n={method:"DELETE",path:"/3/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},estimateABTest(e,r){if(!e)throw new Error("Parameter `estimateABTestRequest` is required when calling `estimateABTest`.");if(!e.configuration)throw new Error("Parameter `estimateABTestRequest.configuration` is required when calling `estimateABTest`.");if(!e.variants)throw new Error("Parameter `estimateABTestRequest.variants` is required when calling `estimateABTest`.");const n={method:"POST",path:"/3/abtests/estimate",queryParameters:{},headers:{},data:e};return t.request(n,r)},getABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `getABTest`.");const n={method:"GET",path:"/3/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getTimeseries({id:e,startDate:r,endDate:a,metric:s},o){if(!e)throw new Error("Parameter `id` is required when calling `getTimeseries`.");const n="/3/abtests/{id}/timeseries".replace("{id}",encodeURIComponent(e)),i={},h={};r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.metric=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},listABTests({offset:e,limit:r,indexPrefix:a,indexSuffix:s,direction:o}={},n=void 0){const i="/3/abtests",h={},m={};e!==void 0&&(m.offset=e.toString()),r!==void 0&&(m.limit=r.toString()),a!==void 0&&(m.indexPrefix=a.toString()),s!==void 0&&(m.indexSuffix=s.toString()),o!==void 0&&(m.direction=o.toString());const g={method:"GET",path:i,queryParameters:m,headers:h};return t.request(g,n)},scheduleABTest(e,r){if(!e)throw new Error("Parameter `scheduleABTestsRequest` is required when calling `scheduleABTest`.");if(!e.name)throw new Error("Parameter `scheduleABTestsRequest.name` is required when calling `scheduleABTest`.");if(!e.variants)throw new Error("Parameter `scheduleABTestsRequest.variants` is required when calling `scheduleABTest`.");if(!e.metrics)throw new Error("Parameter `scheduleABTestsRequest.metrics` is required when calling `scheduleABTest`.");if(!e.scheduledAt)throw new Error("Parameter `scheduleABTestsRequest.scheduledAt` is required when calling `scheduleABTest`.");if(!e.endAt)throw new Error("Parameter `scheduleABTestsRequest.endAt` is required when calling `scheduleABTest`.");const n={method:"POST",path:"/3/abtests/schedule",queryParameters:{},headers:{},data:e};return t.request(n,r)},stopABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `stopABTest`.");const n={method:"POST",path:"/3/abtests/{id}/stop".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)}}}function Ue(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(d&&(typeof d!="string"||!pe.includes(d)))throw new Error(`\`region\` must be one of the following: ${pe.join(", ")}`);return Cr({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${te}-${c}`}),T()]}),...P})}const kr=Object.freeze(Object.defineProperty({__proto__:null,abtestingV3Client:Ue,apiClientVersion:te},Symbol.toStringTag,{value:"Module"}));var ae="5.35.0",ye=["de","us"];function Dr(c){return[{url:c?"analytics.{region}.algolia.com".replace("{region}",c):"analytics.algolia.com",accept:"readWrite",protocol:"https"}]}function Rr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:Dr(w),...q,algoliaAgent:j({algoliaAgents:P,client:"Abtesting",version:ae}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},addABTests(e,r){if(!e)throw new Error("Parameter `addABTestsRequest` is required when calling `addABTests`.");if(!e.name)throw new Error("Parameter `addABTestsRequest.name` is required when calling `addABTests`.");if(!e.variants)throw new Error("Parameter `addABTestsRequest.variants` is required when calling `addABTests`.");if(!e.endAt)throw new Error("Parameter `addABTestsRequest.endAt` is required when calling `addABTests`.");const n={method:"POST",path:"/2/abtests",queryParameters:{},headers:{},data:e};return t.request(n,r)},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `deleteABTest`.");const n={method:"DELETE",path:"/2/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},estimateABTest(e,r){if(!e)throw new Error("Parameter `estimateABTestRequest` is required when calling `estimateABTest`.");if(!e.configuration)throw new Error("Parameter `estimateABTestRequest.configuration` is required when calling `estimateABTest`.");if(!e.variants)throw new Error("Parameter `estimateABTestRequest.variants` is required when calling `estimateABTest`.");const n={method:"POST",path:"/2/abtests/estimate",queryParameters:{},headers:{},data:e};return t.request(n,r)},getABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `getABTest`.");const n={method:"GET",path:"/2/abtests/{id}".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},listABTests({offset:e,limit:r,indexPrefix:a,indexSuffix:s}={},o=void 0){const n="/2/abtests",i={},h={};e!==void 0&&(h.offset=e.toString()),r!==void 0&&(h.limit=r.toString()),a!==void 0&&(h.indexPrefix=a.toString()),s!==void 0&&(h.indexSuffix=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},scheduleABTest(e,r){if(!e)throw new Error("Parameter `scheduleABTestsRequest` is required when calling `scheduleABTest`.");if(!e.name)throw new Error("Parameter `scheduleABTestsRequest.name` is required when calling `scheduleABTest`.");if(!e.variants)throw new Error("Parameter `scheduleABTestsRequest.variants` is required when calling `scheduleABTest`.");if(!e.scheduledAt)throw new Error("Parameter `scheduleABTestsRequest.scheduledAt` is required when calling `scheduleABTest`.");if(!e.endAt)throw new Error("Parameter `scheduleABTestsRequest.endAt` is required when calling `scheduleABTest`.");const n={method:"POST",path:"/2/abtests/schedule",queryParameters:{},headers:{},data:e};return t.request(n,r)},stopABTest({id:e},r){if(!e)throw new Error("Parameter `id` is required when calling `stopABTest`.");const n={method:"POST",path:"/2/abtests/{id}/stop".replace("{id}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)}}}function _e(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(d&&(typeof d!="string"||!ye.includes(d)))throw new Error(`\`region\` must be one of the following: ${ye.join(", ")}`);return Rr({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${ae}-${c}`}),T()]}),...P})}const Ar=Object.freeze(Object.defineProperty({__proto__:null,abtestingClient:_e,apiClientVersion:ae},Symbol.toStringTag,{value:"Module"}));var se="5.35.0",Ee=["de","us"];function Ur(c){return[{url:c?"analytics.{region}.algolia.com".replace("{region}",c):"analytics.algolia.com",accept:"readWrite",protocol:"https"}]}function _r({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:Ur(w),...q,algoliaAgent:j({algoliaAgents:P,client:"Analytics",version:se}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},getAddToCartRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getAddToCartRate`.");const n="/2/conversions/addToCartRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getAverageClickPosition({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getAverageClickPosition`.");const n="/2/clicks/averageClickPosition",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getClickPositions({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getClickPositions`.");const n="/2/clicks/positions",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getClickThroughRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getClickThroughRate`.");const n="/2/clicks/clickThroughRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getConversionRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getConversionRate`.");const n="/2/conversions/conversionRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getNoClickRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getNoClickRate`.");const n="/2/searches/noClickRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getNoResultsRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getNoResultsRate`.");const n="/2/searches/noResultRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getPurchaseRate({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getPurchaseRate`.");const n="/2/conversions/purchaseRate",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getRevenue({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getRevenue`.");const n="/2/conversions/revenue",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getSearchesCount({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesCount`.");const n="/2/searches/count",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},getSearchesNoClicks({index:e,startDate:r,endDate:a,limit:s,offset:o,tags:n},i){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesNoClicks`.");const h="/2/searches/noClicks",m={},g={};e!==void 0&&(g.index=e.toString()),r!==void 0&&(g.startDate=r.toString()),a!==void 0&&(g.endDate=a.toString()),s!==void 0&&(g.limit=s.toString()),o!==void 0&&(g.offset=o.toString()),n!==void 0&&(g.tags=n.toString());const f={method:"GET",path:h,queryParameters:g,headers:m};return t.request(f,i)},getSearchesNoResults({index:e,startDate:r,endDate:a,limit:s,offset:o,tags:n},i){if(!e)throw new Error("Parameter `index` is required when calling `getSearchesNoResults`.");const h="/2/searches/noResults",m={},g={};e!==void 0&&(g.index=e.toString()),r!==void 0&&(g.startDate=r.toString()),a!==void 0&&(g.endDate=a.toString()),s!==void 0&&(g.limit=s.toString()),o!==void 0&&(g.offset=o.toString()),n!==void 0&&(g.tags=n.toString());const f={method:"GET",path:h,queryParameters:g,headers:m};return t.request(f,i)},getStatus({index:e},r){if(!e)throw new Error("Parameter `index` is required when calling `getStatus`.");const a="/2/status",s={},o={};e!==void 0&&(o.index=e.toString());const n={method:"GET",path:a,queryParameters:o,headers:s};return t.request(n,r)},getTopCountries({index:e,startDate:r,endDate:a,limit:s,offset:o,tags:n},i){if(!e)throw new Error("Parameter `index` is required when calling `getTopCountries`.");const h="/2/countries",m={},g={};e!==void 0&&(g.index=e.toString()),r!==void 0&&(g.startDate=r.toString()),a!==void 0&&(g.endDate=a.toString()),s!==void 0&&(g.limit=s.toString()),o!==void 0&&(g.offset=o.toString()),n!==void 0&&(g.tags=n.toString());const f={method:"GET",path:h,queryParameters:g,headers:m};return t.request(f,i)},getTopFilterAttributes({index:e,search:r,startDate:a,endDate:s,limit:o,offset:n,tags:i},h){if(!e)throw new Error("Parameter `index` is required when calling `getTopFilterAttributes`.");const m="/2/filters",g={},f={};e!==void 0&&(f.index=e.toString()),r!==void 0&&(f.search=r.toString()),a!==void 0&&(f.startDate=a.toString()),s!==void 0&&(f.endDate=s.toString()),o!==void 0&&(f.limit=o.toString()),n!==void 0&&(f.offset=n.toString()),i!==void 0&&(f.tags=i.toString());const y={method:"GET",path:m,queryParameters:f,headers:g};return t.request(y,h)},getTopFilterForAttribute({attribute:e,index:r,search:a,startDate:s,endDate:o,limit:n,offset:i,tags:h},m){if(!e)throw new Error("Parameter `attribute` is required when calling `getTopFilterForAttribute`.");if(!r)throw new Error("Parameter `index` is required when calling `getTopFilterForAttribute`.");const g="/2/filters/{attribute}".replace("{attribute}",encodeURIComponent(e)),f={},y={};r!==void 0&&(y.index=r.toString()),a!==void 0&&(y.search=a.toString()),s!==void 0&&(y.startDate=s.toString()),o!==void 0&&(y.endDate=o.toString()),n!==void 0&&(y.limit=n.toString()),i!==void 0&&(y.offset=i.toString()),h!==void 0&&(y.tags=h.toString());const p={method:"GET",path:g,queryParameters:y,headers:f};return t.request(p,m)},getTopFiltersNoResults({index:e,search:r,startDate:a,endDate:s,limit:o,offset:n,tags:i},h){if(!e)throw new Error("Parameter `index` is required when calling `getTopFiltersNoResults`.");const m="/2/filters/noResults",g={},f={};e!==void 0&&(f.index=e.toString()),r!==void 0&&(f.search=r.toString()),a!==void 0&&(f.startDate=a.toString()),s!==void 0&&(f.endDate=s.toString()),o!==void 0&&(f.limit=o.toString()),n!==void 0&&(f.offset=n.toString()),i!==void 0&&(f.tags=i.toString());const y={method:"GET",path:m,queryParameters:f,headers:g};return t.request(y,h)},getTopHits({index:e,search:r,clickAnalytics:a,revenueAnalytics:s,startDate:o,endDate:n,limit:i,offset:h,tags:m},g){if(!e)throw new Error("Parameter `index` is required when calling `getTopHits`.");const f="/2/hits",y={},p={};e!==void 0&&(p.index=e.toString()),r!==void 0&&(p.search=r.toString()),a!==void 0&&(p.clickAnalytics=a.toString()),s!==void 0&&(p.revenueAnalytics=s.toString()),o!==void 0&&(p.startDate=o.toString()),n!==void 0&&(p.endDate=n.toString()),i!==void 0&&(p.limit=i.toString()),h!==void 0&&(p.offset=h.toString()),m!==void 0&&(p.tags=m.toString());const E={method:"GET",path:f,queryParameters:p,headers:y};return t.request(E,g)},getTopSearches({index:e,clickAnalytics:r,revenueAnalytics:a,startDate:s,endDate:o,orderBy:n,direction:i,limit:h,offset:m,tags:g},f){if(!e)throw new Error("Parameter `index` is required when calling `getTopSearches`.");const y="/2/searches",p={},E={};e!==void 0&&(E.index=e.toString()),r!==void 0&&(E.clickAnalytics=r.toString()),a!==void 0&&(E.revenueAnalytics=a.toString()),s!==void 0&&(E.startDate=s.toString()),o!==void 0&&(E.endDate=o.toString()),n!==void 0&&(E.orderBy=n.toString()),i!==void 0&&(E.direction=i.toString()),h!==void 0&&(E.limit=h.toString()),m!==void 0&&(E.offset=m.toString()),g!==void 0&&(E.tags=g.toString());const v={method:"GET",path:y,queryParameters:E,headers:p};return t.request(v,f)},getUsersCount({index:e,startDate:r,endDate:a,tags:s},o){if(!e)throw new Error("Parameter `index` is required when calling `getUsersCount`.");const n="/2/users/count",i={},h={};e!==void 0&&(h.index=e.toString()),r!==void 0&&(h.startDate=r.toString()),a!==void 0&&(h.endDate=a.toString()),s!==void 0&&(h.tags=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)}}}function Ne(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(d&&(typeof d!="string"||!Ee.includes(d)))throw new Error(`\`region\` must be one of the following: ${Ee.join(", ")}`);return _r({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${se}-${c}`}),T()]}),...P})}const Nr=Object.freeze(Object.defineProperty({__proto__:null,analyticsClient:Ne,apiClientVersion:se},Symbol.toStringTag,{value:"Module"}));var ne="5.35.0",ve=["de","us"];function jr(c){return[{url:c?"insights.{region}.algolia.io".replace("{region}",c):"insights.algolia.io",accept:"readWrite",protocol:"https"}]}function Gr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:jr(w),...q,algoliaAgent:j({algoliaAgents:P,client:"Insights",version:ne}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteUserToken({userToken:e},r){if(!e)throw new Error("Parameter `userToken` is required when calling `deleteUserToken`.");const n={method:"DELETE",path:"/1/usertokens/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},pushEvents(e,r){if(!e)throw new Error("Parameter `insightsEvents` is required when calling `pushEvents`.");if(!e.events)throw new Error("Parameter `insightsEvents.events` is required when calling `pushEvents`.");const n={method:"POST",path:"/1/events",queryParameters:{},headers:{},data:e};return t.request(n,r)}}}function je(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(d&&(typeof d!="string"||!ve.includes(d)))throw new Error(`\`region\` must be one of the following: ${ve.join(", ")}`);return Gr({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${ne}-${c}`}),T()]}),...P})}const $r=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ne,insightsClient:je},Symbol.toStringTag,{value:"Module"}));var oe="5.35.0",Te=["eu","us"];function Or(c){return[{url:"personalization.{region}.algolia.com".replace("{region}",c),accept:"readWrite",protocol:"https"}]}function Br({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:Or(w),...q,algoliaAgent:j({algoliaAgents:P,client:"Personalization",version:oe}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteUserProfile({userToken:e},r){if(!e)throw new Error("Parameter `userToken` is required when calling `deleteUserProfile`.");const n={method:"DELETE",path:"/1/profiles/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getPersonalizationStrategy(e){const o={method:"GET",path:"/1/strategies/personalization",queryParameters:{},headers:{}};return t.request(o,e)},getUserTokenProfile({userToken:e},r){if(!e)throw new Error("Parameter `userToken` is required when calling `getUserTokenProfile`.");const n={method:"GET",path:"/1/profiles/personalization/{userToken}".replace("{userToken}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},setPersonalizationStrategy(e,r){if(!e)throw new Error("Parameter `personalizationStrategyParams` is required when calling `setPersonalizationStrategy`.");if(!e.eventsScoring)throw new Error("Parameter `personalizationStrategyParams.eventsScoring` is required when calling `setPersonalizationStrategy`.");if(!e.facetsScoring)throw new Error("Parameter `personalizationStrategyParams.facetsScoring` is required when calling `setPersonalizationStrategy`.");if(!e.personalizationImpact)throw new Error("Parameter `personalizationStrategyParams.personalizationImpact` is required when calling `setPersonalizationStrategy`.");const n={method:"POST",path:"/1/strategies/personalization",queryParameters:{},headers:{},data:e};return t.request(n,r)}}}function Ge(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(!d||d&&(typeof d!="string"||!Te.includes(d)))throw new Error(`\`region\` is required and must be one of the following: ${Te.join(", ")}`);return Br({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${oe}-${c}`}),T()]}),...P})}const Hr=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:oe,personalizationClient:Ge},Symbol.toStringTag,{value:"Module"}));var ie="5.35.0",Se=["eu","us"];function Vr(c){return[{url:"query-suggestions.{region}.algolia.com".replace("{region}",c),accept:"readWrite",protocol:"https"}]}function zr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:Vr(w),...q,algoliaAgent:j({algoliaAgents:P,client:"QuerySuggestions",version:ie}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},createConfig(e,r){if(!e)throw new Error("Parameter `configurationWithIndex` is required when calling `createConfig`.");const n={method:"POST",path:"/1/configs",queryParameters:{},headers:{},data:e};return t.request(n,r)},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteConfig({indexName:e},r){if(!e)throw new Error("Parameter `indexName` is required when calling `deleteConfig`.");const n={method:"DELETE",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getAllConfigs(e){const o={method:"GET",path:"/1/configs",queryParameters:{},headers:{}};return t.request(o,e)},getConfig({indexName:e},r){if(!e)throw new Error("Parameter `indexName` is required when calling `getConfig`.");const n={method:"GET",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getConfigStatus({indexName:e},r){if(!e)throw new Error("Parameter `indexName` is required when calling `getConfigStatus`.");const n={method:"GET",path:"/1/configs/{indexName}/status".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getLogFile({indexName:e},r){if(!e)throw new Error("Parameter `indexName` is required when calling `getLogFile`.");const n={method:"GET",path:"/1/logs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},updateConfig({indexName:e,configuration:r},a){if(!e)throw new Error("Parameter `indexName` is required when calling `updateConfig`.");if(!r)throw new Error("Parameter `configuration` is required when calling `updateConfig`.");if(!r.sourceIndices)throw new Error("Parameter `configuration.sourceIndices` is required when calling `updateConfig`.");const i={method:"PUT",path:"/1/configs/{indexName}".replace("{indexName}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)}}}function $e(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(!d||d&&(typeof d!="string"||!Se.includes(d)))throw new Error(`\`region\` is required and must be one of the following: ${Se.join(", ")}`);return zr({appId:c,apiKey:u,region:d,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${ie}-${c}`}),T()]}),...P})}const Lr=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ie,querySuggestionsClient:$e},Symbol.toStringTag,{value:"Module"}));var M="5.35.0";function Qr(c){return[{url:`${c}-dsn.algolia.net`,accept:"read",protocol:"https"},{url:`${c}.algolia.net`,accept:"write",protocol:"https"}].concat(Re([{url:`${c}-1.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${c}-2.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${c}-3.algolianet.com`,accept:"readWrite",protocol:"https"}]))}function Wr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,...w}){const q=N(c,u,d),l=$({hosts:Qr(c),...w,algoliaAgent:j({algoliaAgents:P,client:"Search",version:M}),baseHeaders:{"content-type":"text/plain",...q.headers(),...w.baseHeaders},baseQueryParameters:{...q.queryParameters(),...w.baseQueryParameters}});return{transporter:l,appId:c,apiKey:u,clearCache(){return Promise.all([l.requestsCache.clear(),l.responsesCache.clear()]).then(()=>{})},get _ua(){return l.algoliaAgent.value},addAlgoliaAgent(t,e){l.algoliaAgent.add({segment:t,version:e})},setClientApiKey({apiKey:t}){!d||d==="WithinHeaders"?l.baseHeaders["x-algolia-api-key"]=t:l.baseQueryParameters["x-algolia-api-key"]=t},waitForTask({indexName:t,taskID:e,maxRetries:r=50,timeout:a=o=>Math.min(o*200,5e3)},s){let o=0;return B({func:()=>this.getTask({indexName:t,taskID:e},s),validate:n=>n.status==="published",aggregator:()=>o+=1,error:{validate:()=>o>=r,message:()=>`The maximum number of retries exceeded. (${o}/${r})`},timeout:()=>a(o)})},waitForAppTask({taskID:t,maxRetries:e=50,timeout:r=s=>Math.min(s*200,5e3)},a){let s=0;return B({func:()=>this.getAppTask({taskID:t},a),validate:o=>o.status==="published",aggregator:()=>s+=1,error:{validate:()=>s>=e,message:()=>`The maximum number of retries exceeded. (${s}/${e})`},timeout:()=>r(s)})},waitForApiKey({operation:t,key:e,apiKey:r,maxRetries:a=50,timeout:s=n=>Math.min(n*200,5e3)},o){let n=0;const i={aggregator:()=>n+=1,error:{validate:()=>n>=a,message:()=>`The maximum number of retries exceeded. (${n}/${a})`},timeout:()=>s(n)};if(t==="update"){if(!r)throw new Error("`apiKey` is required when waiting for an `update` operation.");return B({...i,func:()=>this.getApiKey({key:e},o),validate:h=>{for(const m of Object.keys(r)){const g=r[m],f=h[m];if(Array.isArray(g)&&Array.isArray(f)){if(g.length!==f.length||g.some((y,p)=>y!==f[p]))return!1}else if(g!==f)return!1}return!0}})}return B({...i,func:()=>this.getApiKey({key:e},o).catch(h=>{if(h.status!==404)throw h}),validate:h=>t==="add"?h!==void 0:h===void 0})},browseObjects({indexName:t,browseParams:e,...r},a){return B({func:s=>this.browse({indexName:t,browseParams:{cursor:s?s.cursor:void 0,hitsPerPage:1e3,...e}},a),validate:s=>s.cursor===void 0,...r})},browseRules({indexName:t,searchRulesParams:e,...r},a){const s={...e,hitsPerPage:(e==null?void 0:e.hitsPerPage)||1e3};return B({func:o=>this.searchRules({indexName:t,searchRulesParams:{...s,page:o?o.page+1:s.page||0}},a),validate:o=>o.hits.length<s.hitsPerPage,...r})},browseSynonyms({indexName:t,searchSynonymsParams:e,...r},a){const s={...e,page:(e==null?void 0:e.page)||0,hitsPerPage:1e3};return B({func:o=>{const n=this.searchSynonyms({indexName:t,searchSynonymsParams:{...s,page:s.page}},a);return s.page+=1,n},validate:o=>o.hits.length<s.hitsPerPage,...r})},async chunkedBatch({indexName:t,objects:e,action:r="addObject",waitForTasks:a,batchSize:s=1e3},o){let n=[];const i=[],h=e.entries();for(const[m,g]of h)n.push({action:r,body:g}),(n.length===s||m===e.length-1)&&(i.push(await this.batch({indexName:t,batchWriteParams:{requests:n}},o)),n=[]);if(a)for(const m of i)await this.waitForTask({indexName:t,taskID:m.taskID});return i},async saveObjects({indexName:t,objects:e,waitForTasks:r,batchSize:a},s){return await this.chunkedBatch({indexName:t,objects:e,action:"addObject",waitForTasks:r,batchSize:a},s)},async deleteObjects({indexName:t,objectIDs:e,waitForTasks:r,batchSize:a},s){return await this.chunkedBatch({indexName:t,objects:e.map(o=>({objectID:o})),action:"deleteObject",waitForTasks:r,batchSize:a},s)},async partialUpdateObjects({indexName:t,objects:e,createIfNotExists:r,waitForTasks:a,batchSize:s},o){return await this.chunkedBatch({indexName:t,objects:e,action:r?"partialUpdateObject":"partialUpdateObjectNoCreate",batchSize:s,waitForTasks:a},o)},async replaceAllObjects({indexName:t,objects:e,batchSize:r,scopes:a},s){const o=Math.floor(Math.random()*1e6)+1e5,n=`${t}_tmp_${o}`;a===void 0&&(a=["settings","rules","synonyms"]);try{let i=await this.operationIndex({indexName:t,operationIndexParams:{operation:"copy",destination:n,scope:a}},s);const h=await this.chunkedBatch({indexName:n,objects:e,waitForTasks:!0,batchSize:r},s);await this.waitForTask({indexName:n,taskID:i.taskID}),i=await this.operationIndex({indexName:t,operationIndexParams:{operation:"copy",destination:n,scope:a}},s),await this.waitForTask({indexName:n,taskID:i.taskID});const m=await this.operationIndex({indexName:n,operationIndexParams:{operation:"move",destination:t}},s);return await this.waitForTask({indexName:n,taskID:m.taskID}),{copyOperationResponse:i,batchResponses:h,moveOperationResponse:m}}catch(i){throw await this.deleteIndex({indexName:n}),i}},async indexExists({indexName:t}){try{await this.getSettings({indexName:t})}catch(e){if(e instanceof J&&e.status===404)return!1;throw e}return!0},searchForHits(t,e){return this.search(t,e)},searchForFacets(t,e){return this.search(t,e)},addApiKey(t,e){if(!t)throw new Error("Parameter `apiKey` is required when calling `addApiKey`.");if(!t.acl)throw new Error("Parameter `apiKey.acl` is required when calling `addApiKey`.");const o={method:"POST",path:"/1/keys",queryParameters:{},headers:{},data:t};return l.request(o,e)},addOrUpdateObject({indexName:t,objectID:e,body:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `addOrUpdateObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `addOrUpdateObject`.");if(!r)throw new Error("Parameter `body` is required when calling `addOrUpdateObject`.");const i={method:"PUT",path:"/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return l.request(i,a)},appendSource(t,e){if(!t)throw new Error("Parameter `source` is required when calling `appendSource`.");if(!t.source)throw new Error("Parameter `source.source` is required when calling `appendSource`.");const o={method:"POST",path:"/1/security/sources/append",queryParameters:{},headers:{},data:t};return l.request(o,e)},assignUserId({xAlgoliaUserID:t,assignUserIdParams:e},r){if(!t)throw new Error("Parameter `xAlgoliaUserID` is required when calling `assignUserId`.");if(!e)throw new Error("Parameter `assignUserIdParams` is required when calling `assignUserId`.");if(!e.cluster)throw new Error("Parameter `assignUserIdParams.cluster` is required when calling `assignUserId`.");const a="/1/clusters/mapping",s={},o={};t!==void 0&&(s["X-Algolia-User-ID"]=t.toString());const n={method:"POST",path:a,queryParameters:o,headers:s,data:e};return l.request(n,r)},batch({indexName:t,batchWriteParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `batch`.");if(!e)throw new Error("Parameter `batchWriteParams` is required when calling `batch`.");if(!e.requests)throw new Error("Parameter `batchWriteParams.requests` is required when calling `batch`.");const n={method:"POST",path:"/1/indexes/{indexName}/batch".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)},batchAssignUserIds({xAlgoliaUserID:t,batchAssignUserIdsParams:e},r){if(!t)throw new Error("Parameter `xAlgoliaUserID` is required when calling `batchAssignUserIds`.");if(!e)throw new Error("Parameter `batchAssignUserIdsParams` is required when calling `batchAssignUserIds`.");if(!e.cluster)throw new Error("Parameter `batchAssignUserIdsParams.cluster` is required when calling `batchAssignUserIds`.");if(!e.users)throw new Error("Parameter `batchAssignUserIdsParams.users` is required when calling `batchAssignUserIds`.");const a="/1/clusters/mapping/batch",s={},o={};t!==void 0&&(s["X-Algolia-User-ID"]=t.toString());const n={method:"POST",path:a,queryParameters:o,headers:s,data:e};return l.request(n,r)},batchDictionaryEntries({dictionaryName:t,batchDictionaryEntriesParams:e},r){if(!t)throw new Error("Parameter `dictionaryName` is required when calling `batchDictionaryEntries`.");if(!e)throw new Error("Parameter `batchDictionaryEntriesParams` is required when calling `batchDictionaryEntries`.");if(!e.requests)throw new Error("Parameter `batchDictionaryEntriesParams.requests` is required when calling `batchDictionaryEntries`.");const n={method:"POST",path:"/1/dictionaries/{dictionaryName}/batch".replace("{dictionaryName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)},browse({indexName:t,browseParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `browse`.");const n={method:"POST",path:"/1/indexes/{indexName}/browse".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0};return l.request(n,r)},clearObjects({indexName:t},e){if(!t)throw new Error("Parameter `indexName` is required when calling `clearObjects`.");const o={method:"POST",path:"/1/indexes/{indexName}/clear".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},clearRules({indexName:t,forwardToReplicas:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `clearRules`.");const a="/1/indexes/{indexName}/rules/clear".replace("{indexName}",encodeURIComponent(t)),s={},o={};e!==void 0&&(o.forwardToReplicas=e.toString());const n={method:"POST",path:a,queryParameters:o,headers:s};return l.request(n,r)},clearSynonyms({indexName:t,forwardToReplicas:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `clearSynonyms`.");const a="/1/indexes/{indexName}/synonyms/clear".replace("{indexName}",encodeURIComponent(t)),s={},o={};e!==void 0&&(o.forwardToReplicas=e.toString());const n={method:"POST",path:a,queryParameters:o,headers:s};return l.request(n,r)},customDelete({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customDelete`.");const n={method:"DELETE",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customGet({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customGet`.");const n={method:"GET",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customPost({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPost`.");const i={method:"POST",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},customPut({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPut`.");const i={method:"PUT",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},deleteApiKey({key:t},e){if(!t)throw new Error("Parameter `key` is required when calling `deleteApiKey`.");const o={method:"DELETE",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},deleteBy({indexName:t,deleteByParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteBy`.");if(!e)throw new Error("Parameter `deleteByParams` is required when calling `deleteBy`.");const n={method:"POST",path:"/1/indexes/{indexName}/deleteByQuery".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)},deleteIndex({indexName:t},e){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteIndex`.");const o={method:"DELETE",path:"/1/indexes/{indexName}".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},deleteObject({indexName:t,objectID:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteObject`.");const n={method:"DELETE",path:"/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return l.request(n,r)},deleteRule({indexName:t,objectID:e,forwardToReplicas:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteRule`.");const s="/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),o={},n={};r!==void 0&&(n.forwardToReplicas=r.toString());const i={method:"DELETE",path:s,queryParameters:n,headers:o};return l.request(i,a)},deleteSource({source:t},e){if(!t)throw new Error("Parameter `source` is required when calling `deleteSource`.");const o={method:"DELETE",path:"/1/security/sources/{source}".replace("{source}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},deleteSynonym({indexName:t,objectID:e,forwardToReplicas:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `deleteSynonym`.");const s="/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),o={},n={};r!==void 0&&(n.forwardToReplicas=r.toString());const i={method:"DELETE",path:s,queryParameters:n,headers:o};return l.request(i,a)},getApiKey({key:t},e){if(!t)throw new Error("Parameter `key` is required when calling `getApiKey`.");const o={method:"GET",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getAppTask({taskID:t},e){if(!t)throw new Error("Parameter `taskID` is required when calling `getAppTask`.");const o={method:"GET",path:"/1/task/{taskID}".replace("{taskID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getDictionaryLanguages(t){const s={method:"GET",path:"/1/dictionaries/*/languages",queryParameters:{},headers:{}};return l.request(s,t)},getDictionarySettings(t){const s={method:"GET",path:"/1/dictionaries/*/settings",queryParameters:{},headers:{}};return l.request(s,t)},getLogs({offset:t,length:e,indexName:r,type:a}={},s=void 0){const o="/1/logs",n={},i={};t!==void 0&&(i.offset=t.toString()),e!==void 0&&(i.length=e.toString()),r!==void 0&&(i.indexName=r.toString()),a!==void 0&&(i.type=a.toString());const h={method:"GET",path:o,queryParameters:i,headers:n};return l.request(h,s)},getObject({indexName:t,objectID:e,attributesToRetrieve:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `getObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getObject`.");const s="/1/indexes/{indexName}/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),o={},n={};r!==void 0&&(n.attributesToRetrieve=r.toString());const i={method:"GET",path:s,queryParameters:n,headers:o};return l.request(i,a)},getObjects(t,e){if(!t)throw new Error("Parameter `getObjectsParams` is required when calling `getObjects`.");if(!t.requests)throw new Error("Parameter `getObjectsParams.requests` is required when calling `getObjects`.");const o={method:"POST",path:"/1/indexes/*/objects",queryParameters:{},headers:{},data:t,useReadTransporter:!0,cacheable:!0};return l.request(o,e)},getRule({indexName:t,objectID:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `getRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getRule`.");const n={method:"GET",path:"/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return l.request(n,r)},getSettings({indexName:t},e){if(!t)throw new Error("Parameter `indexName` is required when calling `getSettings`.");const o={method:"GET",path:"/1/indexes/{indexName}/settings".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getSources(t){const s={method:"GET",path:"/1/security/sources",queryParameters:{},headers:{}};return l.request(s,t)},getSynonym({indexName:t,objectID:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `getSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `getSynonym`.");const n={method:"GET",path:"/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return l.request(n,r)},getTask({indexName:t,taskID:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `getTask`.");if(!e)throw new Error("Parameter `taskID` is required when calling `getTask`.");const n={method:"GET",path:"/1/indexes/{indexName}/task/{taskID}".replace("{indexName}",encodeURIComponent(t)).replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return l.request(n,r)},getTopUserIds(t){const s={method:"GET",path:"/1/clusters/mapping/top",queryParameters:{},headers:{}};return l.request(s,t)},getUserId({userID:t},e){if(!t)throw new Error("Parameter `userID` is required when calling `getUserId`.");const o={method:"GET",path:"/1/clusters/mapping/{userID}".replace("{userID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},hasPendingMappings({getClusters:t}={},e=void 0){const r="/1/clusters/mapping/pending",a={},s={};t!==void 0&&(s.getClusters=t.toString());const o={method:"GET",path:r,queryParameters:s,headers:a};return l.request(o,e)},listApiKeys(t){const s={method:"GET",path:"/1/keys",queryParameters:{},headers:{}};return l.request(s,t)},listClusters(t){const s={method:"GET",path:"/1/clusters",queryParameters:{},headers:{}};return l.request(s,t)},listIndices({page:t,hitsPerPage:e}={},r=void 0){const a="/1/indexes",s={},o={};t!==void 0&&(o.page=t.toString()),e!==void 0&&(o.hitsPerPage=e.toString());const n={method:"GET",path:a,queryParameters:o,headers:s};return l.request(n,r)},listUserIds({page:t,hitsPerPage:e}={},r=void 0){const a="/1/clusters/mapping",s={},o={};t!==void 0&&(o.page=t.toString()),e!==void 0&&(o.hitsPerPage=e.toString());const n={method:"GET",path:a,queryParameters:o,headers:s};return l.request(n,r)},multipleBatch(t,e){if(!t)throw new Error("Parameter `batchParams` is required when calling `multipleBatch`.");if(!t.requests)throw new Error("Parameter `batchParams.requests` is required when calling `multipleBatch`.");const o={method:"POST",path:"/1/indexes/*/batch",queryParameters:{},headers:{},data:t};return l.request(o,e)},operationIndex({indexName:t,operationIndexParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `operationIndex`.");if(!e)throw new Error("Parameter `operationIndexParams` is required when calling `operationIndex`.");if(!e.operation)throw new Error("Parameter `operationIndexParams.operation` is required when calling `operationIndex`.");if(!e.destination)throw new Error("Parameter `operationIndexParams.destination` is required when calling `operationIndex`.");const n={method:"POST",path:"/1/indexes/{indexName}/operation".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)},partialUpdateObject({indexName:t,objectID:e,attributesToUpdate:r,createIfNotExists:a},s){if(!t)throw new Error("Parameter `indexName` is required when calling `partialUpdateObject`.");if(!e)throw new Error("Parameter `objectID` is required when calling `partialUpdateObject`.");if(!r)throw new Error("Parameter `attributesToUpdate` is required when calling `partialUpdateObject`.");const o="/1/indexes/{indexName}/{objectID}/partial".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),n={},i={};a!==void 0&&(i.createIfNotExists=a.toString());const h={method:"POST",path:o,queryParameters:i,headers:n,data:r};return l.request(h,s)},removeUserId({userID:t},e){if(!t)throw new Error("Parameter `userID` is required when calling `removeUserId`.");const o={method:"DELETE",path:"/1/clusters/mapping/{userID}".replace("{userID}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},replaceSources({source:t},e){if(!t)throw new Error("Parameter `source` is required when calling `replaceSources`.");const o={method:"PUT",path:"/1/security/sources",queryParameters:{},headers:{},data:t};return l.request(o,e)},restoreApiKey({key:t},e){if(!t)throw new Error("Parameter `key` is required when calling `restoreApiKey`.");const o={method:"POST",path:"/1/keys/{key}/restore".replace("{key}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},saveObject({indexName:t,body:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `saveObject`.");if(!e)throw new Error("Parameter `body` is required when calling `saveObject`.");const n={method:"POST",path:"/1/indexes/{indexName}".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)},saveRule({indexName:t,objectID:e,rule:r,forwardToReplicas:a},s){if(!t)throw new Error("Parameter `indexName` is required when calling `saveRule`.");if(!e)throw new Error("Parameter `objectID` is required when calling `saveRule`.");if(!r)throw new Error("Parameter `rule` is required when calling `saveRule`.");if(!r.objectID)throw new Error("Parameter `rule.objectID` is required when calling `saveRule`.");if(!r.consequence)throw new Error("Parameter `rule.consequence` is required when calling `saveRule`.");const o="/1/indexes/{indexName}/rules/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),n={},i={};a!==void 0&&(i.forwardToReplicas=a.toString());const h={method:"PUT",path:o,queryParameters:i,headers:n,data:r};return l.request(h,s)},saveRules({indexName:t,rules:e,forwardToReplicas:r,clearExistingRules:a},s){if(!t)throw new Error("Parameter `indexName` is required when calling `saveRules`.");if(!e)throw new Error("Parameter `rules` is required when calling `saveRules`.");const o="/1/indexes/{indexName}/rules/batch".replace("{indexName}",encodeURIComponent(t)),n={},i={};r!==void 0&&(i.forwardToReplicas=r.toString()),a!==void 0&&(i.clearExistingRules=a.toString());const h={method:"POST",path:o,queryParameters:i,headers:n,data:e};return l.request(h,s)},saveSynonym({indexName:t,objectID:e,synonymHit:r,forwardToReplicas:a},s){if(!t)throw new Error("Parameter `indexName` is required when calling `saveSynonym`.");if(!e)throw new Error("Parameter `objectID` is required when calling `saveSynonym`.");if(!r)throw new Error("Parameter `synonymHit` is required when calling `saveSynonym`.");if(!r.objectID)throw new Error("Parameter `synonymHit.objectID` is required when calling `saveSynonym`.");if(!r.type)throw new Error("Parameter `synonymHit.type` is required when calling `saveSynonym`.");const o="/1/indexes/{indexName}/synonyms/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{objectID}",encodeURIComponent(e)),n={},i={};a!==void 0&&(i.forwardToReplicas=a.toString());const h={method:"PUT",path:o,queryParameters:i,headers:n,data:r};return l.request(h,s)},saveSynonyms({indexName:t,synonymHit:e,forwardToReplicas:r,replaceExistingSynonyms:a},s){if(!t)throw new Error("Parameter `indexName` is required when calling `saveSynonyms`.");if(!e)throw new Error("Parameter `synonymHit` is required when calling `saveSynonyms`.");const o="/1/indexes/{indexName}/synonyms/batch".replace("{indexName}",encodeURIComponent(t)),n={},i={};r!==void 0&&(i.forwardToReplicas=r.toString()),a!==void 0&&(i.replaceExistingSynonyms=a.toString());const h={method:"POST",path:o,queryParameters:i,headers:n,data:e};return l.request(h,s)},search(t,e){if(t&&Array.isArray(t)&&(t={requests:t.map(({params:i,...h})=>h.type==="facet"?{...h,...i,type:"facet"}:{...h,...i,facet:void 0,maxFacetHits:void 0,facetQuery:void 0})}),!t)throw new Error("Parameter `searchMethodParams` is required when calling `search`.");if(!t.requests)throw new Error("Parameter `searchMethodParams.requests` is required when calling `search`.");const o={method:"POST",path:"/1/indexes/*/queries",queryParameters:{},headers:{},data:t,useReadTransporter:!0,cacheable:!0};return l.request(o,e)},searchDictionaryEntries({dictionaryName:t,searchDictionaryEntriesParams:e},r){if(!t)throw new Error("Parameter `dictionaryName` is required when calling `searchDictionaryEntries`.");if(!e)throw new Error("Parameter `searchDictionaryEntriesParams` is required when calling `searchDictionaryEntries`.");if(!e.query)throw new Error("Parameter `searchDictionaryEntriesParams.query` is required when calling `searchDictionaryEntries`.");const n={method:"POST",path:"/1/dictionaries/{dictionaryName}/search".replace("{dictionaryName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e,useReadTransporter:!0,cacheable:!0};return l.request(n,r)},searchForFacetValues({indexName:t,facetName:e,searchForFacetValuesRequest:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `searchForFacetValues`.");if(!e)throw new Error("Parameter `facetName` is required when calling `searchForFacetValues`.");const i={method:"POST",path:"/1/indexes/{indexName}/facets/{facetName}/query".replace("{indexName}",encodeURIComponent(t)).replace("{facetName}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{},useReadTransporter:!0,cacheable:!0};return l.request(i,a)},searchRules({indexName:t,searchRulesParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `searchRules`.");const n={method:"POST",path:"/1/indexes/{indexName}/rules/search".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return l.request(n,r)},searchSingleIndex({indexName:t,searchParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `searchSingleIndex`.");const n={method:"POST",path:"/1/indexes/{indexName}/query".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return l.request(n,r)},searchSynonyms({indexName:t,searchSynonymsParams:e},r){if(!t)throw new Error("Parameter `indexName` is required when calling `searchSynonyms`.");const n={method:"POST",path:"/1/indexes/{indexName}/synonyms/search".replace("{indexName}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e||{},useReadTransporter:!0,cacheable:!0};return l.request(n,r)},searchUserIds(t,e){if(!t)throw new Error("Parameter `searchUserIdsParams` is required when calling `searchUserIds`.");if(!t.query)throw new Error("Parameter `searchUserIdsParams.query` is required when calling `searchUserIds`.");const o={method:"POST",path:"/1/clusters/mapping/search",queryParameters:{},headers:{},data:t,useReadTransporter:!0,cacheable:!0};return l.request(o,e)},setDictionarySettings(t,e){if(!t)throw new Error("Parameter `dictionarySettingsParams` is required when calling `setDictionarySettings`.");if(!t.disableStandardEntries)throw new Error("Parameter `dictionarySettingsParams.disableStandardEntries` is required when calling `setDictionarySettings`.");const o={method:"PUT",path:"/1/dictionaries/*/settings",queryParameters:{},headers:{},data:t};return l.request(o,e)},setSettings({indexName:t,indexSettings:e,forwardToReplicas:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `setSettings`.");if(!e)throw new Error("Parameter `indexSettings` is required when calling `setSettings`.");const s="/1/indexes/{indexName}/settings".replace("{indexName}",encodeURIComponent(t)),o={},n={};r!==void 0&&(n.forwardToReplicas=r.toString());const i={method:"PUT",path:s,queryParameters:n,headers:o,data:e};return l.request(i,a)},updateApiKey({key:t,apiKey:e},r){if(!t)throw new Error("Parameter `key` is required when calling `updateApiKey`.");if(!e)throw new Error("Parameter `apiKey` is required when calling `updateApiKey`.");if(!e.acl)throw new Error("Parameter `apiKey.acl` is required when calling `updateApiKey`.");const n={method:"PUT",path:"/1/keys/{key}".replace("{key}",encodeURIComponent(t)),queryParameters:{},headers:{},data:e};return l.request(n,r)}}}function Oe(c,u,d){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");return Wr({appId:c,apiKey:u,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${M}-${c}`}),T()]}),...d})}const Mr=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:M,searchClient:Oe},Symbol.toStringTag,{value:"Module"}));var ce="1.35.0",be=["eu","us"];function Fr(c){return[{url:"data.{region}.algolia.com".replace("{region}",c),accept:"readWrite",protocol:"https"}]}function Kr(c){return c.type==="onDemand"}function Jr(c){return c.type==="schedule"}function Zr(c){return c.type==="subscription"}function Xr({appId:c,apiKey:u,authMode:d,algoliaAgents:P,region:w,...q}){const l=N(c,u,d),t=$({hosts:Fr(w),...q,algoliaAgent:j({algoliaAgents:P,client:"Ingestion",version:ce}),baseHeaders:{"content-type":"text/plain",...l.headers(),...q.baseHeaders},baseQueryParameters:{...l.queryParameters(),...q.baseQueryParameters}});return{transporter:t,appId:c,apiKey:u,clearCache(){return Promise.all([t.requestsCache.clear(),t.responsesCache.clear()]).then(()=>{})},get _ua(){return t.algoliaAgent.value},addAlgoliaAgent(e,r){t.algoliaAgent.add({segment:e,version:r})},setClientApiKey({apiKey:e}){!d||d==="WithinHeaders"?t.baseHeaders["x-algolia-api-key"]=e:t.baseQueryParameters["x-algolia-api-key"]=e},async chunkedPush({indexName:e,objects:r,action:a="addObject",waitForTasks:s,batchSize:o=1e3,referenceIndexName:n},i){let h=[],m=0;const g=[],f=Math.floor(o/10)||o,y=r.entries();for(const[p,E]of y)if(h.push(E),(h.length===o||p===r.length-1)&&(g.push(await this.push({indexName:e,pushTaskPayload:{action:a,records:h},referenceIndexName:n},i)),h=[]),s&&g.length>0&&(g.length%f===0||p===r.length-1)){for(const v of g.slice(m,m+f)){if(!v.eventID)throw new Error("received unexpected response from the push endpoint, eventID must not be undefined");let I=0;await B({func:async()=>{if(v.eventID===void 0||!v.eventID)throw new Error("received unexpected response from the push endpoint, eventID must not be undefined");return this.getEvent({runID:v.runID,eventID:v.eventID}).catch(V=>{if(V.status!==404)throw V})},validate:V=>V!==void 0,aggregator:()=>I+=1,error:{validate:()=>I>=50,message:()=>`The maximum number of retries exceeded. (${I}/50)`},timeout:()=>Math.min(I*500,5e3)})}m+=f}return g},createAuthentication(e,r){if(!e)throw new Error("Parameter `authenticationCreate` is required when calling `createAuthentication`.");if(!e.type)throw new Error("Parameter `authenticationCreate.type` is required when calling `createAuthentication`.");if(!e.name)throw new Error("Parameter `authenticationCreate.name` is required when calling `createAuthentication`.");if(!e.input)throw new Error("Parameter `authenticationCreate.input` is required when calling `createAuthentication`.");const n={method:"POST",path:"/1/authentications",queryParameters:{},headers:{},data:e};return t.request(n,r)},createDestination(e,r){if(!e)throw new Error("Parameter `destinationCreate` is required when calling `createDestination`.");if(!e.type)throw new Error("Parameter `destinationCreate.type` is required when calling `createDestination`.");if(!e.name)throw new Error("Parameter `destinationCreate.name` is required when calling `createDestination`.");if(!e.input)throw new Error("Parameter `destinationCreate.input` is required when calling `createDestination`.");const n={method:"POST",path:"/1/destinations",queryParameters:{},headers:{},data:e};return t.request(n,r)},createSource(e,r){if(!e)throw new Error("Parameter `sourceCreate` is required when calling `createSource`.");if(!e.type)throw new Error("Parameter `sourceCreate.type` is required when calling `createSource`.");if(!e.name)throw new Error("Parameter `sourceCreate.name` is required when calling `createSource`.");const n={method:"POST",path:"/1/sources",queryParameters:{},headers:{},data:e};return t.request(n,r)},createTask(e,r){if(!e)throw new Error("Parameter `taskCreate` is required when calling `createTask`.");if(!e.sourceID)throw new Error("Parameter `taskCreate.sourceID` is required when calling `createTask`.");if(!e.destinationID)throw new Error("Parameter `taskCreate.destinationID` is required when calling `createTask`.");if(!e.action)throw new Error("Parameter `taskCreate.action` is required when calling `createTask`.");const n={method:"POST",path:"/2/tasks",queryParameters:{},headers:{},data:e};return t.request(n,r)},createTaskV1(e,r){if(!e)throw new Error("Parameter `taskCreate` is required when calling `createTaskV1`.");if(!e.sourceID)throw new Error("Parameter `taskCreate.sourceID` is required when calling `createTaskV1`.");if(!e.destinationID)throw new Error("Parameter `taskCreate.destinationID` is required when calling `createTaskV1`.");if(!e.trigger)throw new Error("Parameter `taskCreate.trigger` is required when calling `createTaskV1`.");if(!e.action)throw new Error("Parameter `taskCreate.action` is required when calling `createTaskV1`.");const n={method:"POST",path:"/1/tasks",queryParameters:{},headers:{},data:e};return t.request(n,r)},createTransformation(e,r){if(!e)throw new Error("Parameter `transformationCreate` is required when calling `createTransformation`.");if(!e.name)throw new Error("Parameter `transformationCreate.name` is required when calling `createTransformation`.");const n={method:"POST",path:"/1/transformations",queryParameters:{},headers:{},data:e};return t.request(n,r)},customDelete({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customDelete`.");const i={method:"DELETE",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customGet({path:e,parameters:r},a){if(!e)throw new Error("Parameter `path` is required when calling `customGet`.");const i={method:"GET",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{}};return t.request(i,a)},customPost({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPost`.");const h={method:"POST",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},customPut({path:e,parameters:r,body:a},s){if(!e)throw new Error("Parameter `path` is required when calling `customPut`.");const h={method:"PUT",path:"/{path}".replace("{path}",e),queryParameters:r||{},headers:{},data:a||{}};return t.request(h,s)},deleteAuthentication({authenticationID:e},r){if(!e)throw new Error("Parameter `authenticationID` is required when calling `deleteAuthentication`.");const n={method:"DELETE",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},deleteDestination({destinationID:e},r){if(!e)throw new Error("Parameter `destinationID` is required when calling `deleteDestination`.");const n={method:"DELETE",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},deleteSource({sourceID:e},r){if(!e)throw new Error("Parameter `sourceID` is required when calling `deleteSource`.");const n={method:"DELETE",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},deleteTask({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `deleteTask`.");const n={method:"DELETE",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},deleteTaskV1({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `deleteTaskV1`.");const n={method:"DELETE",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},deleteTransformation({transformationID:e},r){if(!e)throw new Error("Parameter `transformationID` is required when calling `deleteTransformation`.");const n={method:"DELETE",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},disableTask({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `disableTask`.");const n={method:"PUT",path:"/2/tasks/{taskID}/disable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},disableTaskV1({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `disableTaskV1`.");const n={method:"PUT",path:"/1/tasks/{taskID}/disable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},enableTask({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `enableTask`.");const n={method:"PUT",path:"/2/tasks/{taskID}/enable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},enableTaskV1({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `enableTaskV1`.");const n={method:"PUT",path:"/1/tasks/{taskID}/enable".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getAuthentication({authenticationID:e},r){if(!e)throw new Error("Parameter `authenticationID` is required when calling `getAuthentication`.");const n={method:"GET",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getDestination({destinationID:e},r){if(!e)throw new Error("Parameter `destinationID` is required when calling `getDestination`.");const n={method:"GET",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getEvent({runID:e,eventID:r},a){if(!e)throw new Error("Parameter `runID` is required when calling `getEvent`.");if(!r)throw new Error("Parameter `eventID` is required when calling `getEvent`.");const i={method:"GET",path:"/1/runs/{runID}/events/{eventID}".replace("{runID}",encodeURIComponent(e)).replace("{eventID}",encodeURIComponent(r)),queryParameters:{},headers:{}};return t.request(i,a)},getRun({runID:e},r){if(!e)throw new Error("Parameter `runID` is required when calling `getRun`.");const n={method:"GET",path:"/1/runs/{runID}".replace("{runID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getSource({sourceID:e},r){if(!e)throw new Error("Parameter `sourceID` is required when calling `getSource`.");const n={method:"GET",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getTask({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `getTask`.");const n={method:"GET",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getTaskV1({taskID:e},r){if(!e)throw new Error("Parameter `taskID` is required when calling `getTaskV1`.");const n={method:"GET",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},getTransformation({transformationID:e},r){if(!e)throw new Error("Parameter `transformationID` is required when calling `getTransformation`.");const n={method:"GET",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return t.request(n,r)},listAuthentications({itemsPerPage:e,page:r,type:a,platform:s,sort:o,order:n}={},i=void 0){const h="/1/authentications",m={},g={};e!==void 0&&(g.itemsPerPage=e.toString()),r!==void 0&&(g.page=r.toString()),a!==void 0&&(g.type=a.toString()),s!==void 0&&(g.platform=s.toString()),o!==void 0&&(g.sort=o.toString()),n!==void 0&&(g.order=n.toString());const f={method:"GET",path:h,queryParameters:g,headers:m};return t.request(f,i)},listDestinations({itemsPerPage:e,page:r,type:a,authenticationID:s,transformationID:o,sort:n,order:i}={},h=void 0){const m="/1/destinations",g={},f={};e!==void 0&&(f.itemsPerPage=e.toString()),r!==void 0&&(f.page=r.toString()),a!==void 0&&(f.type=a.toString()),s!==void 0&&(f.authenticationID=s.toString()),o!==void 0&&(f.transformationID=o.toString()),n!==void 0&&(f.sort=n.toString()),i!==void 0&&(f.order=i.toString());const y={method:"GET",path:m,queryParameters:f,headers:g};return t.request(y,h)},listEvents({runID:e,itemsPerPage:r,page:a,status:s,type:o,sort:n,order:i,startDate:h,endDate:m},g){if(!e)throw new Error("Parameter `runID` is required when calling `listEvents`.");const f="/1/runs/{runID}/events".replace("{runID}",encodeURIComponent(e)),y={},p={};r!==void 0&&(p.itemsPerPage=r.toString()),a!==void 0&&(p.page=a.toString()),s!==void 0&&(p.status=s.toString()),o!==void 0&&(p.type=o.toString()),n!==void 0&&(p.sort=n.toString()),i!==void 0&&(p.order=i.toString()),h!==void 0&&(p.startDate=h.toString()),m!==void 0&&(p.endDate=m.toString());const E={method:"GET",path:f,queryParameters:p,headers:y};return t.request(E,g)},listRuns({itemsPerPage:e,page:r,status:a,type:s,taskID:o,sort:n,order:i,startDate:h,endDate:m}={},g=void 0){const f="/1/runs",y={},p={};e!==void 0&&(p.itemsPerPage=e.toString()),r!==void 0&&(p.page=r.toString()),a!==void 0&&(p.status=a.toString()),s!==void 0&&(p.type=s.toString()),o!==void 0&&(p.taskID=o.toString()),n!==void 0&&(p.sort=n.toString()),i!==void 0&&(p.order=i.toString()),h!==void 0&&(p.startDate=h.toString()),m!==void 0&&(p.endDate=m.toString());const E={method:"GET",path:f,queryParameters:p,headers:y};return t.request(E,g)},listSources({itemsPerPage:e,page:r,type:a,authenticationID:s,sort:o,order:n}={},i=void 0){const h="/1/sources",m={},g={};e!==void 0&&(g.itemsPerPage=e.toString()),r!==void 0&&(g.page=r.toString()),a!==void 0&&(g.type=a.toString()),s!==void 0&&(g.authenticationID=s.toString()),o!==void 0&&(g.sort=o.toString()),n!==void 0&&(g.order=n.toString());const f={method:"GET",path:h,queryParameters:g,headers:m};return t.request(f,i)},listTasks({itemsPerPage:e,page:r,action:a,enabled:s,sourceID:o,sourceType:n,destinationID:i,triggerType:h,withEmailNotifications:m,sort:g,order:f}={},y=void 0){const p="/2/tasks",E={},v={};e!==void 0&&(v.itemsPerPage=e.toString()),r!==void 0&&(v.page=r.toString()),a!==void 0&&(v.action=a.toString()),s!==void 0&&(v.enabled=s.toString()),o!==void 0&&(v.sourceID=o.toString()),n!==void 0&&(v.sourceType=n.toString()),i!==void 0&&(v.destinationID=i.toString()),h!==void 0&&(v.triggerType=h.toString()),m!==void 0&&(v.withEmailNotifications=m.toString()),g!==void 0&&(v.sort=g.toString()),f!==void 0&&(v.order=f.toString());const I={method:"GET",path:p,queryParameters:v,headers:E};return t.request(I,y)},listTasksV1({itemsPerPage:e,page:r,action:a,enabled:s,sourceID:o,destinationID:n,triggerType:i,sort:h,order:m}={},g=void 0){const f="/1/tasks",y={},p={};e!==void 0&&(p.itemsPerPage=e.toString()),r!==void 0&&(p.page=r.toString()),a!==void 0&&(p.action=a.toString()),s!==void 0&&(p.enabled=s.toString()),o!==void 0&&(p.sourceID=o.toString()),n!==void 0&&(p.destinationID=n.toString()),i!==void 0&&(p.triggerType=i.toString()),h!==void 0&&(p.sort=h.toString()),m!==void 0&&(p.order=m.toString());const E={method:"GET",path:f,queryParameters:p,headers:y};return t.request(E,g)},listTransformations({itemsPerPage:e,page:r,sort:a,order:s}={},o=void 0){const n="/1/transformations",i={},h={};e!==void 0&&(h.itemsPerPage=e.toString()),r!==void 0&&(h.page=r.toString()),a!==void 0&&(h.sort=a.toString()),s!==void 0&&(h.order=s.toString());const m={method:"GET",path:n,queryParameters:h,headers:i};return t.request(m,o)},push({indexName:e,pushTaskPayload:r,watch:a,referenceIndexName:s},o){if(!e)throw new Error("Parameter `indexName` is required when calling `push`.");if(!r)throw new Error("Parameter `pushTaskPayload` is required when calling `push`.");if(!r.action)throw new Error("Parameter `pushTaskPayload.action` is required when calling `push`.");if(!r.records)throw new Error("Parameter `pushTaskPayload.records` is required when calling `push`.");const n="/1/push/{indexName}".replace("{indexName}",encodeURIComponent(e)),i={},h={};a!==void 0&&(h.watch=a.toString()),s!==void 0&&(h.referenceIndexName=s.toString());const m={method:"POST",path:n,queryParameters:h,headers:i,data:r};return o={timeouts:{connect:18e4,read:18e4,write:18e4,...o==null?void 0:o.timeouts}},t.request(m,o)},pushTask({taskID:e,pushTaskPayload:r,watch:a},s){if(!e)throw new Error("Parameter `taskID` is required when calling `pushTask`.");if(!r)throw new Error("Parameter `pushTaskPayload` is required when calling `pushTask`.");if(!r.action)throw new Error("Parameter `pushTaskPayload.action` is required when calling `pushTask`.");if(!r.records)throw new Error("Parameter `pushTaskPayload.records` is required when calling `pushTask`.");const o="/2/tasks/{taskID}/push".replace("{taskID}",encodeURIComponent(e)),n={},i={};a!==void 0&&(i.watch=a.toString());const h={method:"POST",path:o,queryParameters:i,headers:n,data:r};return s={timeouts:{connect:18e4,read:18e4,write:18e4,...s==null?void 0:s.timeouts}},t.request(h,s)},runSource({sourceID:e,runSourcePayload:r},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `runSource`.");const i={method:"POST",path:"/1/sources/{sourceID}/run".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{}};return t.request(i,a)},runTask({taskID:e,runTaskPayload:r},a){if(!e)throw new Error("Parameter `taskID` is required when calling `runTask`.");const i={method:"POST",path:"/2/tasks/{taskID}/run".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{}};return t.request(i,a)},runTaskV1({taskID:e,runTaskPayload:r},a){if(!e)throw new Error("Parameter `taskID` is required when calling `runTaskV1`.");const i={method:"POST",path:"/1/tasks/{taskID}/run".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{}};return t.request(i,a)},searchAuthentications(e,r){if(!e)throw new Error("Parameter `authenticationSearch` is required when calling `searchAuthentications`.");if(!e.authenticationIDs)throw new Error("Parameter `authenticationSearch.authenticationIDs` is required when calling `searchAuthentications`.");const n={method:"POST",path:"/1/authentications/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},searchDestinations(e,r){if(!e)throw new Error("Parameter `destinationSearch` is required when calling `searchDestinations`.");if(!e.destinationIDs)throw new Error("Parameter `destinationSearch.destinationIDs` is required when calling `searchDestinations`.");const n={method:"POST",path:"/1/destinations/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},searchSources(e,r){if(!e)throw new Error("Parameter `sourceSearch` is required when calling `searchSources`.");if(!e.sourceIDs)throw new Error("Parameter `sourceSearch.sourceIDs` is required when calling `searchSources`.");const n={method:"POST",path:"/1/sources/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},searchTasks(e,r){if(!e)throw new Error("Parameter `taskSearch` is required when calling `searchTasks`.");if(!e.taskIDs)throw new Error("Parameter `taskSearch.taskIDs` is required when calling `searchTasks`.");const n={method:"POST",path:"/2/tasks/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},searchTasksV1(e,r){if(!e)throw new Error("Parameter `taskSearch` is required when calling `searchTasksV1`.");if(!e.taskIDs)throw new Error("Parameter `taskSearch.taskIDs` is required when calling `searchTasksV1`.");const n={method:"POST",path:"/1/tasks/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},searchTransformations(e,r){if(!e)throw new Error("Parameter `transformationSearch` is required when calling `searchTransformations`.");if(!e.transformationIDs)throw new Error("Parameter `transformationSearch.transformationIDs` is required when calling `searchTransformations`.");const n={method:"POST",path:"/1/transformations/search",queryParameters:{},headers:{},data:e};return t.request(n,r)},triggerDockerSourceDiscover({sourceID:e},r){if(!e)throw new Error("Parameter `sourceID` is required when calling `triggerDockerSourceDiscover`.");const n={method:"POST",path:"/1/sources/{sourceID}/discover".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{}};return r={timeouts:{connect:18e4,read:18e4,write:18e4,...r==null?void 0:r.timeouts}},t.request(n,r)},tryTransformation(e,r){if(!e)throw new Error("Parameter `transformationTry` is required when calling `tryTransformation`.");if(!e.sampleRecord)throw new Error("Parameter `transformationTry.sampleRecord` is required when calling `tryTransformation`.");const n={method:"POST",path:"/1/transformations/try",queryParameters:{},headers:{},data:e};return t.request(n,r)},tryTransformationBeforeUpdate({transformationID:e,transformationTry:r},a){if(!e)throw new Error("Parameter `transformationID` is required when calling `tryTransformationBeforeUpdate`.");if(!r)throw new Error("Parameter `transformationTry` is required when calling `tryTransformationBeforeUpdate`.");if(!r.sampleRecord)throw new Error("Parameter `transformationTry.sampleRecord` is required when calling `tryTransformationBeforeUpdate`.");const i={method:"POST",path:"/1/transformations/{transformationID}/try".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateAuthentication({authenticationID:e,authenticationUpdate:r},a){if(!e)throw new Error("Parameter `authenticationID` is required when calling `updateAuthentication`.");if(!r)throw new Error("Parameter `authenticationUpdate` is required when calling `updateAuthentication`.");const i={method:"PATCH",path:"/1/authentications/{authenticationID}".replace("{authenticationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateDestination({destinationID:e,destinationUpdate:r},a){if(!e)throw new Error("Parameter `destinationID` is required when calling `updateDestination`.");if(!r)throw new Error("Parameter `destinationUpdate` is required when calling `updateDestination`.");const i={method:"PATCH",path:"/1/destinations/{destinationID}".replace("{destinationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateSource({sourceID:e,sourceUpdate:r},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `updateSource`.");if(!r)throw new Error("Parameter `sourceUpdate` is required when calling `updateSource`.");const i={method:"PATCH",path:"/1/sources/{sourceID}".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateTask({taskID:e,taskUpdate:r},a){if(!e)throw new Error("Parameter `taskID` is required when calling `updateTask`.");if(!r)throw new Error("Parameter `taskUpdate` is required when calling `updateTask`.");const i={method:"PATCH",path:"/2/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateTaskV1({taskID:e,taskUpdate:r},a){if(!e)throw new Error("Parameter `taskID` is required when calling `updateTaskV1`.");if(!r)throw new Error("Parameter `taskUpdate` is required when calling `updateTaskV1`.");const i={method:"PATCH",path:"/1/tasks/{taskID}".replace("{taskID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},updateTransformation({transformationID:e,transformationCreate:r},a){if(!e)throw new Error("Parameter `transformationID` is required when calling `updateTransformation`.");if(!r)throw new Error("Parameter `transformationCreate` is required when calling `updateTransformation`.");if(!r.name)throw new Error("Parameter `transformationCreate.name` is required when calling `updateTransformation`.");const i={method:"PUT",path:"/1/transformations/{transformationID}".replace("{transformationID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return t.request(i,a)},validateSource(e,r=void 0){const n={method:"POST",path:"/1/sources/validate",queryParameters:{},headers:{},data:e||{}};return r={timeouts:{connect:18e4,read:18e4,write:18e4,...r==null?void 0:r.timeouts}},t.request(n,r)},validateSourceBeforeUpdate({sourceID:e,sourceUpdate:r},a){if(!e)throw new Error("Parameter `sourceID` is required when calling `validateSourceBeforeUpdate`.");if(!r)throw new Error("Parameter `sourceUpdate` is required when calling `validateSourceBeforeUpdate`.");const i={method:"POST",path:"/1/sources/{sourceID}/validate".replace("{sourceID}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r};return a={timeouts:{connect:18e4,read:18e4,write:18e4,...a==null?void 0:a.timeouts}},t.request(i,a)}}}function ee(c,u,d,P){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");if(!d||d&&(typeof d!="string"||!be.includes(d)))throw new Error(`\`region\` is required and must be one of the following: ${be.join(", ")}`);return Xr({appId:c,apiKey:u,region:d,timeouts:{connect:25e3,read:25e3,write:25e3},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${ce}-${c}`}),T()]}),...P})}const Yr=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ce,ingestionClient:ee,isOnDemandTrigger:Kr,isScheduleTrigger:Jr,isSubscriptionTrigger:Zr},Symbol.toStringTag,{value:"Module"}));var ue="1.35.0";function et(){return[{url:"status.algolia.com",accept:"readWrite",protocol:"https"}]}function rt({appId:c,apiKey:u,authMode:d,algoliaAgents:P,...w}){const q=N(c,u,d),l=$({hosts:et(),...w,algoliaAgent:j({algoliaAgents:P,client:"Monitoring",version:ue}),baseHeaders:{"content-type":"text/plain",...q.headers(),...w.baseHeaders},baseQueryParameters:{...q.queryParameters(),...w.baseQueryParameters}});return{transporter:l,appId:c,apiKey:u,clearCache(){return Promise.all([l.requestsCache.clear(),l.responsesCache.clear()]).then(()=>{})},get _ua(){return l.algoliaAgent.value},addAlgoliaAgent(t,e){l.algoliaAgent.add({segment:t,version:e})},setClientApiKey({apiKey:t}){!d||d==="WithinHeaders"?l.baseHeaders["x-algolia-api-key"]=t:l.baseQueryParameters["x-algolia-api-key"]=t},customDelete({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customDelete`.");const n={method:"DELETE",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customGet({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customGet`.");const n={method:"GET",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customPost({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPost`.");const i={method:"POST",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},customPut({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPut`.");const i={method:"PUT",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},getClusterIncidents({clusters:t},e){if(!t)throw new Error("Parameter `clusters` is required when calling `getClusterIncidents`.");const o={method:"GET",path:"/1/incidents/{clusters}".replace("{clusters}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getClusterStatus({clusters:t},e){if(!t)throw new Error("Parameter `clusters` is required when calling `getClusterStatus`.");const o={method:"GET",path:"/1/status/{clusters}".replace("{clusters}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getIncidents(t){const s={method:"GET",path:"/1/incidents",queryParameters:{},headers:{}};return l.request(s,t)},getIndexingTime({clusters:t},e){if(!t)throw new Error("Parameter `clusters` is required when calling `getIndexingTime`.");const o={method:"GET",path:"/1/indexing/{clusters}".replace("{clusters}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getLatency({clusters:t},e){if(!t)throw new Error("Parameter `clusters` is required when calling `getLatency`.");const o={method:"GET",path:"/1/latency/{clusters}".replace("{clusters}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getMetrics({metric:t,period:e},r){if(!t)throw new Error("Parameter `metric` is required when calling `getMetrics`.");if(!e)throw new Error("Parameter `period` is required when calling `getMetrics`.");const n={method:"GET",path:"/1/infrastructure/{metric}/period/{period}".replace("{metric}",encodeURIComponent(t)).replace("{period}",encodeURIComponent(e)),queryParameters:{},headers:{}};return l.request(n,r)},getReachability({clusters:t},e){if(!t)throw new Error("Parameter `clusters` is required when calling `getReachability`.");const o={method:"GET",path:"/1/reachability/{clusters}/probes".replace("{clusters}",encodeURIComponent(t)),queryParameters:{},headers:{}};return l.request(o,e)},getServers(t){const s={method:"GET",path:"/1/inventory/servers",queryParameters:{},headers:{}};return l.request(s,t)},getStatus(t){const s={method:"GET",path:"/1/status",queryParameters:{},headers:{}};return l.request(s,t)}}}function Be(c,u,d){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");return rt({appId:c,apiKey:u,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${ue}-${c}`}),T()]}),...d})}const tt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:ue,monitoringClient:Be},Symbol.toStringTag,{value:"Module"}));var he="5.35.0";function at(c){return[{url:`${c}-dsn.algolia.net`,accept:"read",protocol:"https"},{url:`${c}.algolia.net`,accept:"write",protocol:"https"}].concat(Re([{url:`${c}-1.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${c}-2.algolianet.com`,accept:"readWrite",protocol:"https"},{url:`${c}-3.algolianet.com`,accept:"readWrite",protocol:"https"}]))}function st({appId:c,apiKey:u,authMode:d,algoliaAgents:P,...w}){const q=N(c,u,d),l=$({hosts:at(c),...w,algoliaAgent:j({algoliaAgents:P,client:"Recommend",version:he}),baseHeaders:{"content-type":"text/plain",...q.headers(),...w.baseHeaders},baseQueryParameters:{...q.queryParameters(),...w.baseQueryParameters}});return{transporter:l,appId:c,apiKey:u,clearCache(){return Promise.all([l.requestsCache.clear(),l.responsesCache.clear()]).then(()=>{})},get _ua(){return l.algoliaAgent.value},addAlgoliaAgent(t,e){l.algoliaAgent.add({segment:t,version:e})},setClientApiKey({apiKey:t}){!d||d==="WithinHeaders"?l.baseHeaders["x-algolia-api-key"]=t:l.baseQueryParameters["x-algolia-api-key"]=t},batchRecommendRules({indexName:t,model:e,recommendRule:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `batchRecommendRules`.");if(!e)throw new Error("Parameter `model` is required when calling `batchRecommendRules`.");const i={method:"POST",path:"/1/indexes/{indexName}/{model}/recommend/rules/batch".replace("{indexName}",encodeURIComponent(t)).replace("{model}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{}};return l.request(i,a)},customDelete({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customDelete`.");const n={method:"DELETE",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customGet({path:t,parameters:e},r){if(!t)throw new Error("Parameter `path` is required when calling `customGet`.");const n={method:"GET",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{}};return l.request(n,r)},customPost({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPost`.");const i={method:"POST",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},customPut({path:t,parameters:e,body:r},a){if(!t)throw new Error("Parameter `path` is required when calling `customPut`.");const i={method:"PUT",path:"/{path}".replace("{path}",t),queryParameters:e||{},headers:{},data:r||{}};return l.request(i,a)},deleteRecommendRule({indexName:t,model:e,objectID:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `deleteRecommendRule`.");if(!e)throw new Error("Parameter `model` is required when calling `deleteRecommendRule`.");if(!r)throw new Error("Parameter `objectID` is required when calling `deleteRecommendRule`.");const i={method:"DELETE",path:"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{model}",encodeURIComponent(e)).replace("{objectID}",encodeURIComponent(r)),queryParameters:{},headers:{}};return l.request(i,a)},getRecommendRule({indexName:t,model:e,objectID:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `getRecommendRule`.");if(!e)throw new Error("Parameter `model` is required when calling `getRecommendRule`.");if(!r)throw new Error("Parameter `objectID` is required when calling `getRecommendRule`.");const i={method:"GET",path:"/1/indexes/{indexName}/{model}/recommend/rules/{objectID}".replace("{indexName}",encodeURIComponent(t)).replace("{model}",encodeURIComponent(e)).replace("{objectID}",encodeURIComponent(r)),queryParameters:{},headers:{}};return l.request(i,a)},getRecommendStatus({indexName:t,model:e,taskID:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `getRecommendStatus`.");if(!e)throw new Error("Parameter `model` is required when calling `getRecommendStatus`.");if(!r)throw new Error("Parameter `taskID` is required when calling `getRecommendStatus`.");const i={method:"GET",path:"/1/indexes/{indexName}/{model}/task/{taskID}".replace("{indexName}",encodeURIComponent(t)).replace("{model}",encodeURIComponent(e)).replace("{taskID}",encodeURIComponent(r)),queryParameters:{},headers:{}};return l.request(i,a)},getRecommendations(t,e){if(t&&Array.isArray(t)&&(t={requests:t}),!t)throw new Error("Parameter `getRecommendationsParams` is required when calling `getRecommendations`.");if(!t.requests)throw new Error("Parameter `getRecommendationsParams.requests` is required when calling `getRecommendations`.");const o={method:"POST",path:"/1/indexes/*/recommendations",queryParameters:{},headers:{},data:t,useReadTransporter:!0,cacheable:!0};return l.request(o,e)},searchRecommendRules({indexName:t,model:e,searchRecommendRulesParams:r},a){if(!t)throw new Error("Parameter `indexName` is required when calling `searchRecommendRules`.");if(!e)throw new Error("Parameter `model` is required when calling `searchRecommendRules`.");const i={method:"POST",path:"/1/indexes/{indexName}/{model}/recommend/rules/search".replace("{indexName}",encodeURIComponent(t)).replace("{model}",encodeURIComponent(e)),queryParameters:{},headers:{},data:r||{},useReadTransporter:!0,cacheable:!0};return l.request(i,a)}}}function He(c,u,d){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");return st({appId:c,apiKey:u,timeouts:{connect:1e3,read:2e3,write:3e4},logger:G(),requester:U(),algoliaAgents:[{segment:"Browser"}],authMode:"WithinQueryParameters",responsesCache:T(),requestsCache:T({serializable:!1}),hostsCache:C({caches:[_({key:`${he}-${c}`}),T()]}),...d})}const nt=Object.freeze(Object.defineProperty({__proto__:null,apiClientVersion:he,recommendClient:He},Symbol.toStringTag,{value:"Module"}));var Ve=Object.defineProperty,ot=Object.getOwnPropertyDescriptor,it=Object.getOwnPropertyNames,ct=Object.prototype.hasOwnProperty,ze=(c,u)=>{for(var d in u)Ve(c,d,{get:u[d],enumerable:!0})},ut=(c,u,d,P)=>{if(u&&typeof u=="object"||typeof u=="function")for(let w of it(u))!ct.call(c,w)&&w!==d&&Ve(c,w,{get:()=>u[w],enumerable:!(P=ot(u,w))||P.enumerable});return c},R=(c,u,d)=>(ut(c,u,"default"),d),Le={};ze(Le,{algoliasearch:()=>Qe,apiClientVersion:()=>M});var k={};ze(k,{apiClientVersion:()=>M});R(k,kr);R(k,Ar);R(k,Nr);R(k,$r);R(k,Hr);R(k,Lr);R(k,Mr);R(k,Yr);R(k,tt);R(k,nt);R(Le,k);function Qe(c,u,d){if(!c||typeof c!="string")throw new Error("`appId` is missing.");if(!u||typeof u!="string")throw new Error("`apiKey` is missing.");const P=Oe(c,u,d);let w;if(d!=null&&d.transformation){if(!d.transformation.region)throw new Error("`region` must be provided when leveraging the transformation pipeline");w=ee(c,u,d.transformation.region,d)}return{...P,async saveObjectsWithTransformation({indexName:q,objects:l,waitForTasks:t},e){var r;if(!w)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!((r=d==null?void 0:d.transformation)!=null&&r.region))throw new Error("`region` must be provided when leveraging the transformation pipeline");return w.chunkedPush({indexName:q,objects:l,action:"addObject",waitForTasks:t},e)},async partialUpdateObjectsWithTransformation({indexName:q,objects:l,createIfNotExists:t,waitForTasks:e},r){var a;if(!w)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!((a=d==null?void 0:d.transformation)!=null&&a.region))throw new Error("`region` must be provided when leveraging the transformation pipeline");return w.chunkedPush({indexName:q,objects:l,action:t?"partialUpdateObject":"partialUpdateObjectNoCreate",waitForTasks:e},r)},async replaceAllObjectsWithTransformation({indexName:q,objects:l,batchSize:t,scopes:e},r){var o;if(!w)throw new Error("`transformation.region` must be provided at client instantiation before calling this method.");if(!((o=d==null?void 0:d.transformation)!=null&&o.region))throw new Error("`region` must be provided when leveraging the transformation pipeline");const a=Math.floor(Math.random()*1e6)+1e5,s=`${q}_tmp_${a}`;e===void 0&&(e=["settings","rules","synonyms"]);try{let n=await this.operationIndex({indexName:q,operationIndexParams:{operation:"copy",destination:s,scope:e}},r);const i=await w.chunkedPush({indexName:s,objects:l,waitForTasks:!0,batchSize:t,referenceIndexName:q},r);await this.waitForTask({indexName:s,taskID:n.taskID}),n=await this.operationIndex({indexName:q,operationIndexParams:{operation:"copy",destination:s,scope:e}},r),await this.waitForTask({indexName:s,taskID:n.taskID});const h=await this.operationIndex({indexName:s,operationIndexParams:{operation:"move",destination:q}},r);return await this.waitForTask({indexName:s,taskID:h.taskID}),{copyOperationResponse:n,watchResponses:i,moveOperationResponse:h}}catch(n){throw await this.deleteIndex({indexName:s}),n}},get _ua(){return P.transporter.algoliaAgent.value},initAbtesting:q=>_e(q.appId||c,q.apiKey||u,q.region,q.options),initAbtestingV3:q=>Ue(q.appId||c,q.apiKey||u,q.region,q.options),initAnalytics:q=>Ne(q.appId||c,q.apiKey||u,q.region,q.options),initIngestion:q=>ee(q.appId||c,q.apiKey||u,q.region,q.options),initInsights:q=>je(q.appId||c,q.apiKey||u,q.region,q.options),initMonitoring:(q={})=>Be(q.appId||c,q.apiKey||u,q.options),initPersonalization:q=>Ge(q.appId||c,q.apiKey||u,q.region,q.options),initQuerySuggestions:q=>$e(q.appId||c,q.apiKey||u,q.region,q.options),initRecommend:(q={})=>He(q.appId||c,q.apiKey||u,q.options)}}const ht={},dt={class:"absolute z-50 flex flex-col items-center justify-center w-full h-full p-4 gap-y-4 backdrop-blur-md"};function lt(c,u){return b(),D("div",dt,u[0]||(u[0]=[Ie('<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 300 200" class="w-24"><path fill="none" stroke-width="10" stroke-linecap="round" stroke-dasharray="300 385" stroke-dashoffset="0" class="stroke-main blur-md translate-y-[25px]" d="M275 75c0 31-27 50-50 50-58 0-92-100-150-100-28 0-50 22-50 50s23 50 50 50c58 0 92-100 150-100 24 0 50 19 50 50Z"><animate attributeName="stroke-dashoffset" calcMode="spline" dur="2" values="685;-685" keySplines="0 0 1 1" repeatCount="indefinite"></animate></path><path fill="none" stroke-width="10" stroke-linecap="round" stroke-dasharray="300 385" stroke-dashoffset="0" class="stroke-main translate-y-[25px]" d="M275 75c0 31-27 50-50 50-58 0-92-100-150-100-28 0-50 22-50 50s23 50 50 50c58 0 92-100 150-100 24 0 50 19 50 50Z"><animate attributeName="stroke-dashoffset" calcMode="spline" dur="2" values="685;-685" keySplines="0 0 1 1" repeatCount="indefinite"></animate></path></svg>',1)]))}const mt=re(ht,[["render",lt]]),qt={},Pt={class:"absolute z-10 flex flex-col items-center justify-center w-full h-full p-4"};function gt(c,u){return b(),D("div",Pt,u[0]||(u[0]=[S("h1",{class:"text-xl font-medium"},"No Results to Display!",-1),S("h1",{class:"text-neutral-500"},"Try searching for another algorithm.",-1)]))}const wt=re(qt,[["render",gt]]),ft={class:"flex flex-col items-center mt-8 mb-4 font-medium sm:flex-row gap-x-2"},pt={__name:"HitGroup",props:{groupName:{type:String,required:!0}},setup(c){return(u,d)=>(b(),D("div",ft,[A(H(K),{size:"24"},{default:Q(()=>[(b(),W(Ke(H(Je)(c.groupName))))]),_:1}),S("h1",null,xe(c.groupName),1)]))}},yt={class:"flex flex-col mb-2 text-center sm:flex-row sm:items-center gap-x-2 sm:text-left"},Et=["innerHTML"],vt={class:"text-sm text-neutral-500"},Tt=["innerHTML"],St={__name:"Hit",props:{hit:{type:Object,required:!0}},setup(c){const u=Ze("closePopup"),d=Ce(),P=w=>{u(),d.push(w)};return(w,q)=>(b(),D("div",{class:"p-2 duration-75 border rounded-md cursor-pointer border-neutral-700 hover:bg-neutral-800",onClick:q[0]||(q[0]=l=>P(c.hit.id))},[S("div",yt,[S("h2",{class:"font-medium text-neutral-200",innerHTML:c.hit.title},null,8,Et),A(H(K),{size:"20",class:"!hidden text-neutral-500 sm:!block"},{default:Q(()=>[A(H(Xe))]),_:1}),S("h3",vt,xe(c.hit.section.title),1)]),S("p",{innerHTML:c.hit.section.content,class:"text-sm text-center sm:text-left text-neutral-200 line-clamp-2"},null,8,Tt)]))}},bt={class:"absolute flex flex-col w-full h-full px-4 pb-4 overflow-auto bg-neutral-900"},It={class:"first:[&>div]:first:mt-4"},xt={class:"flex flex-col gap-y-4"},Ct={__name:"Results",props:{formattedResults:{type:Array,required:!0}},setup(c){return(u,d)=>(b(),D("div",bt,[(b(!0),D(qe,null,Pe(c.formattedResults,([P,w])=>(b(),D("div",It,[A(pt,{groupName:P},null,8,["groupName"]),S("div",xt,[(b(!0),D(qe,null,Pe(w,q=>(b(),W(St,{hit:q},null,8,["hit"]))),256))])]))),256))]))}},kt={},Dt={class:"flex items-center justify-end w-full h-12 px-4 font-medium text-neutral-600 gap-x-2"};function Rt(c,u){return b(),D("div",Dt,u[0]||(u[0]=[Ie('<h3 class="text-sm">Powered by</h3><a target="_blank" href="https://www.algolia.com/"><svg class="w-16 py-2" viewBox="0 0 2197 501"><path fill-rule="evenodd" clip-rule="evenodd" d="M1070.38 275.47V6.08c0-3.63-3.24-6.39-6.82-5.83l-50.46 7.94a5.912 5.912 0 0 0-4.99 5.84l.17 273.22c0 12.92 0 92.7 95.97 95.49 3.33.1 6.09-2.58 6.09-5.91v-40.78c0-2.96-2.19-5.51-5.12-5.84-34.85-4.01-34.85-47.57-34.85-54.72l.01-.02Z" class="fill-neutral-600"></path><path d="M1902.56 104.9h-50.78a5.9 5.9 0 0 0-5.9 5.9v266.1c0 3.259 2.64 5.9 5.9 5.9h50.78c3.25 0 5.9-2.641 5.9-5.9V110.8c0-3.258-2.65-5.9-5.9-5.9Z" class="fill-neutral-600"></path><path fill-rule="evenodd" clip-rule="evenodd" d="M1851.78 71.55h50.77c3.26 0 5.9-2.64 5.9-5.9V6.07c0-3.62-3.24-6.39-6.82-5.83l-50.77 7.95a5.902 5.902 0 0 0-4.99 5.83v51.62c0 3.26 2.64 5.9 5.9 5.9l.01.01ZM1764.03 275.47V6.08c0-3.63-3.24-6.39-6.82-5.83l-50.46 7.94a5.912 5.912 0 0 0-4.99 5.84l.17 273.22c0 12.92 0 92.7 95.97 95.49 3.33.1 6.09-2.58 6.09-5.91v-40.78c0-2.96-2.19-5.51-5.12-5.84-34.85-4.01-34.85-47.57-34.85-54.72l.01-.02ZM1631.95 142.89c-11.14-12.25-24.83-21.65-40.78-28.31-15.92-6.53-33.26-9.85-52.07-9.85-18.78 0-36.15 3.17-51.92 9.85-15.59 6.66-29.29 16.05-40.76 28.31-11.47 12.23-20.38 26.87-26.76 44.03-6.38 17.17-9.24 37.37-9.24 58.36 0 20.99 3.19 36.87 9.55 54.21 6.38 17.32 15.14 32.11 26.45 44.36 11.29 12.23 24.83 21.62 40.6 28.46 15.77 6.83 40.12 10.33 52.4 10.48 12.25 0 36.78-3.82 52.7-10.48 15.92-6.68 29.46-16.23 40.78-28.46 11.29-12.25 20.05-27.04 26.25-44.36 6.22-17.34 9.24-33.22 9.24-54.21 0-20.99-3.34-41.19-10.03-58.36-6.38-17.17-15.14-31.8-26.43-44.03h.02Zm-44.43 163.75c-11.47 15.75-27.56 23.7-48.09 23.7-20.55 0-36.63-7.8-48.1-23.7-11.47-15.75-17.21-34.01-17.21-61.2 0-26.89 5.59-49.14 17.06-64.87 11.45-15.75 27.54-23.52 48.07-23.52 20.55 0 36.63 7.78 48.09 23.52 11.47 15.57 17.36 37.98 17.36 64.87 0 27.19-5.72 45.3-17.19 61.2h.01ZM894.416 104.9h-49.33c-48.36 0-90.91 25.48-115.75 64.1-14.52 22.58-22.99 49.63-22.99 78.73 0 44.89 20.13 84.92 51.59 111.1 2.93 2.6 6.05 4.98 9.31 7.14 12.86 8.49 28.11 13.47 44.52 13.47 1.23 0 2.46-.03 3.68-.09.36-.02.71-.05 1.07-.07.87-.05 1.75-.11 2.62-.2.34-.03.68-.08 1.02-.12.91-.1 1.82-.21 2.73-.34.21-.03.42-.07.63-.1 32.89-5.07 61.56-30.82 70.9-62.81v57.83c0 3.26 2.64 5.9 5.9 5.9h50.42c3.26 0 5.9-2.64 5.9-5.9V110.8c0-3.26-2.64-5.9-5.9-5.9h-56.32Zm0 206.92c-12.2 10.16-27.97 13.98-44.84 15.12-.16.01-.33.03-.49.04-1.12.07-2.24.1-3.36.1-42.24 0-77.12-35.89-77.12-79.37 0-10.25 1.96-20.01 5.42-28.98 11.22-29.12 38.77-49.74 71.06-49.74h49.33v142.83ZM2133.97 104.9h-49.33c-48.36 0-90.91 25.48-115.75 64.1-14.52 22.58-22.99 49.63-22.99 78.73 0 44.89 20.13 84.92 51.59 111.1 2.93 2.6 6.05 4.98 9.31 7.14 12.86 8.49 28.11 13.47 44.52 13.47 1.23 0 2.46-.03 3.68-.09.36-.02.71-.05 1.07-.07.87-.05 1.75-.11 2.62-.2.34-.03.68-.08 1.02-.12.91-.1 1.82-.21 2.73-.34.21-.03.42-.07.63-.1 32.89-5.07 61.56-30.82 70.9-62.81v57.83c0 3.26 2.64 5.9 5.9 5.9h50.42c3.26 0 5.9-2.64 5.9-5.9V110.8c0-3.26-2.64-5.9-5.9-5.9h-56.32Zm0 206.92c-12.2 10.16-27.97 13.98-44.84 15.12-.16.01-.33.03-.49.04-1.12.07-2.24.1-3.36.1-42.24 0-77.12-35.89-77.12-79.37 0-10.25 1.96-20.01 5.42-28.98 11.22-29.12 38.77-49.74 71.06-49.74h49.33v142.83ZM1314.05 104.9h-49.33c-48.36 0-90.91 25.48-115.75 64.1-11.79 18.34-19.6 39.64-22.11 62.59a148.518 148.518 0 0 0 .05 32.73c4.28 38.09 23.14 71.61 50.66 94.52 2.93 2.6 6.05 4.98 9.31 7.14 12.86 8.49 28.11 13.47 44.52 13.47 17.99 0 34.61-5.93 48.16-15.97 16.29-11.58 28.88-28.54 34.48-47.75v50.26h-.11v11.08c0 21.84-5.71 38.27-17.34 49.36-11.61 11.08-31.04 16.63-58.25 16.63-11.12 0-28.79-.59-46.6-2.41-2.83-.29-5.46 1.5-6.27 4.22l-12.78 43.11c-1.02 3.46 1.27 7.02 4.83 7.53 21.52 3.08 42.52 4.68 54.65 4.68 48.91 0 85.16-10.75 108.89-32.21 21.48-19.41 33.15-48.89 35.2-88.52V110.8c0-3.26-2.64-5.9-5.9-5.9h-56.32.01Zm0 64.1s.65 139.13 0 143.36c-12.08 9.77-27.11 13.59-43.49 14.7-.16.01-.33.03-.49.04-1.12.07-2.24.1-3.36.1-1.32 0-2.63-.03-3.94-.1-40.41-2.11-74.52-37.26-74.52-79.38 0-10.25 1.96-20.01 5.42-28.98 11.22-29.12 38.77-49.74 71.06-49.74h49.33-.01Z" class="fill-neutral-600"></path><path d="M249.826.17C113.296.17 1.996 110.25.026 246.32c-2 138.19 110.12 252.7 248.33 253.5 42.68.25 83.79-10.19 120.3-30.03 3.56-1.93 4.11-6.83 1.08-9.51l-23.38-20.72c-4.75-4.21-11.51-5.4-17.36-2.92-25.48 10.84-53.17 16.38-81.71 16.03-111.68-1.37-201.91-94.29-200.13-205.96 1.76-110.26 92-199.41 202.67-199.41h202.69v360.28l-115-102.18c-3.72-3.31-9.42-2.66-12.42 1.31-18.46 24.44-48.53 39.64-81.93 37.34-46.33-3.2-83.87-40.5-87.34-86.81-4.15-55.24 39.63-101.52 94-101.52 49.18 0 89.68 37.85 93.91 85.95.38 4.28 2.31 8.27 5.52 11.12l29.95 26.55c3.4 3.01 8.79 1.17 9.63-3.3 2.16-11.55 2.92-23.58 2.07-35.92-4.82-70.34-61.8-126.93-132.17-131.26-80.68-4.97-148.13 58.14-150.27 137.25-2.09 77.1 61.08 143.56 138.19 145.26 32.19.71 62.03-9.41 86.14-26.95l150.26 133.2c6.44 5.71 16.61 1.14 16.61-7.47V9.65c0-5.24-4.24-9.48-9.48-9.48h-240.36Z" class="fill-neutral-600"></path></svg></a>',2)]))}const At=re(kt,[["render",Rt]]),Ut={BASE_URL:"/algorithms/",DEV:!1,MODE:"production",PROD:!0,SSR:!1},_t={class:"flex flex-col rounded-md bg-neutral-900 w-full sm:w-130 h-[80vh] max-h-[580px] bg-[image:repeating-radial-gradient(var(--color-zinc-800)_0,var(--color-zinc-800)_1px,_transparent_1px,_transparent_100%)] bg-[size:20px_20px] shadow-[0_0px_50px_0_#15201f] border border-zinc-700 overflow-hidden"},Nt={class:"flex items-center px-4 min-h-12 bg-neutral-900"},jt={class:"flex items-center flex-1 h-full mr-2 gap-x-2"},Gt={class:"relative w-full h-full"},$t="algorithms_index",Ht={__name:"SearchPopup",emits:["toggle-search"],setup(c,{emit:u}){const d=F(null),w=Ce().getRoutes(),q=F(""),l=F(null),t=F(!1),e=ge(()=>{var h,m;return!l.value||((m=(h=l.value)==null?void 0:h.hits)==null?void 0:m.length)===0}),r=u,a=()=>{r("toggle-search")};Ye("closePopup",a);const s=h=>{var E;const m=h._highlightResult.sections;let g,f;for(let v=0;v<m.length;v++){const I=m[v];if(I.title.matchLevel!=="none"||I.content.matchLevel!=="none"){g=v,f=I.title.value;break}}const p=(E=h._snippetResult.sections[g])==null?void 0:E.content.value;return{title:f,content:p}},o=ge(()=>{var f,y;if(!l.value)return;const h=[],m=l.value.hits;for(const p of m){const E=s(p),v=(y=(f=w.find(I=>I.path===p.objectID))==null?void 0:f.meta)==null?void 0:y.groupName;h.push({id:p.objectID,groupName:v,title:p._highlightResult.title.value,section:E})}const g=Object.groupBy(h,({groupName:p})=>p);return Object.entries(g)}),n=async()=>{if(q.value.trim().length===0)return;let h;window.clearTimeout(h),t.value=!1,h=window.setTimeout(()=>t.value=!0,50);const m={indexName:$t,searchParams:{query:q.value,attributesToSnippet:["sections.content:30"],highlightPreTag:'<em class="not-italic text-main">',hitsPerPage:10}},g=await d.value.searchSingleIndex(m);l.value=g,window.clearTimeout(h),t.value=!1},i=h=>{h.key==="Escape"&&a()};return er(async()=>{try{const{VITE_ALGOLIA_APP_ID:h,VITE_ALGOLIA_SEARCH_KEY:m}=Ut,g=h||"QS33VZ076T",f=m||"7048628bed4cfafc2948e7fff1883b3b";m!==f&&console.warn("Search key environment variable is missing. Using demo keys (10 searches/hour max)."),d.value=Qe(g,f),console.log("Algolia client connected.")}catch(h){console.error("Error connecting to Algolia client:",h)}document.addEventListener("keydown",i)}),rr(()=>{document.removeEventListener("keydown",i)}),(h,m)=>{const g=tr("focus");return b(),D("div",{class:"fixed flex items-center justify-center w-full h-full p-4 -translate-x-1/2 -translate-y-1/2 z-100 top-1/2 left-1/2 bg-zinc-950/50 backdrop-blur-sm",onClick:m[4]||(m[4]=ur(f=>a(),["self"]))},[S("div",_t,[S("div",Nt,[S("div",{class:"px-2 mr-4 text-sm border rounded-md cursor-pointer text-neutral-500 border-neutral-500",onClick:m[0]||(m[0]=f=>a())},"esc"),S("div",jt,[A(H(K),{size:"16",class:"text-neutral-500"},{default:Q(()=>[A(H(sr))]),_:1}),ar(S("input",{type:"text",class:"w-full h-full text-sm outline-none caret-main",placeholder:"Search...","onUpdate:modelValue":m[1]||(m[1]=f=>q.value=f),onKeydown:m[2]||(m[2]=or(f=>(async()=>await n())(),["enter"]))},null,544),[[g],[nr,q.value]])]),S("div",{class:"flex items-center justify-center px-2 text-sm border rounded-md cursor-pointer text-neutral-500 border-neutral-500 gap-x-1",onClick:m[3]||(m[3]=f=>(async()=>await n())())},[m[5]||(m[5]=S("span",null,"enter",-1)),A(H(K),{size:"20",class:"text-neutral-500"},{default:Q(()=>[A(H(dr))]),_:1})])]),m[6]||(m[6]=S("hr",{class:"border-zinc-700"},null,-1)),S("div",Gt,[A(cr,{name:"loading-fade"},{default:Q(()=>[e.value?(b(),W(wt,{key:0})):(b(),W(Ct,{key:1,"formatted-results":o.value},null,8,["formatted-results"])),t.value?(b(),W(mt,{key:2})):ir("",!0)]),_:1})]),A(At)])])}}};export{Ht as default};
