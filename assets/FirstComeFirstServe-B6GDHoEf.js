import{r as _,c as Y,y as j,z as K,h as u,o as r,e as t,F as b,i as w,q as S,p as R,m as I,a as P,w as J,b as q,u as D,t as E,d as F,f as z,v as M,g as N,k as x,l as n,j as Z}from"./index-D_iNMHLu.js";import{_ as ee,a as v,b as te,c as se}from"./TrashButton-DPnZcGEf.js";const oe={fcfs:(g,h)=>[g,...h]},ie=(g,h,d)=>{const c=oe[d],i=c(g,h);let p=0;for(let f=1;f<i.length;f++)p+=Math.abs(i[f]-i[f-1]);return{orderedRequests:i,totalSeekTime:p}},le={viewBox:"0 0 800 552",class:"w-full h-full mb-4",xmlns:"http://www.w3.org/2000/svg"},ne={class:"stroke-[1.5px] stroke-white"},re=["x2"],ae=["x1","x2"],ue=["x1","x2"],de={stroke:"gray","stroke-opacity":"0.5"},ce=["x1","x2"],me=["x1","y1"],he=["values","begin"],pe=["values","begin"],fe=["x","y"],ge={key:0},ke=["x1","x2","y1","y2"],xe=["x1","x2","y1","y2"],ye=["cx","cy"],ve={class:"p-2 mx-auto font-medium text-center border rounded-md bg-zinc-800 border-zinc-700 w-72"},y=700,V=450,m=50,A=100,G=9,be=200,L=30,H=200,B=400,we={__name:"SeekTimeGraph",props:{orderedRequests:{type:Array,required:!0},totalSeekTime:{type:Number,required:!0}},setup(g){const h=g,d=V/(h.orderedRequests.length+1),c=_(!1),i=Y(()=>{const a=[];let s=1;for(const e of h.orderedRequests){const o={x:e/be*y+m,y:s*d+A};a.push(o),s++}return a}),p=a=>{const s={top:10,right:6,left:20},e=i.value[a],o=i.value[a+1],l=m+L,T=y+m-L;let $=e.x+s.right,O=e.y-s.top;const X=e.x>l,Q=e.x>T,W=o&&o.x>e.x;return X&&(Q||W)&&($=e.x-s.left),{x:$,y:O}},f=a=>{const s=G+1;return a/s*y+m},k=(a,s=!1)=>s?`transition-delay: ${B*a+H}ms;`:B*a+H;return j(()=>{c.value=!0}),K(()=>{c.value=!1}),(a,s)=>(r(),u(b,null,[(r(),u("svg",le,[s[0]||(s[0]=t("text",{x:"45",y:"60",class:"fill-white"},"0",-1)),s[1]||(s[1]=t("text",{x:"735",y:"60",class:"fill-white"},"199",-1)),s[2]||(s[2]=t("defs",null,[t("pattern",{id:"diagonalLines",patternUnits:"userSpaceOnUse",width:"10",height:"10",class:"-translate-x-[1px]"},[t("circle",{r:"0.5",cx:"1",cy:"1","stroke-width":"1",class:"fill-zinc-600"})])],-1)),t("rect",{x:m,y:A,width:y,height:V,class:"stroke-2 stroke-zinc-700",fill:"url(#diagonalLines)"}),t("g",ne,[t("line",{x1:m,y1:A,x2:m+y-1,y2:A},null,8,re),t("line",{x1:m,y1:"70",x2:m,y2:"130"}),(r(!0),u(b,null,w(i.value,({x:e},o)=>(r(),u("line",{x1:e,y1:"90",x2:e,y2:"110",class:R(["duration-300 opacity-0",{"opacity-100":c.value}]),style:S(k(o,!0))},null,14,ae))),256)),t("line",{x1:y+m,y1:"70",x2:y+m,y2:"130"},null,8,ue)]),t("g",de,[(r(),u(b,null,w(G,e=>t("line",{x1:f(e),y1:"101",x2:f(e),y2:"549",class:"stroke-[1px] stroke-neutral-700"},null,8,ce)),64))]),t("g",null,[(r(!0),u(b,null,w(i.value.slice(0,i.value.length-1),({x:e,y:o},l)=>(r(),u("line",{x1:e,y1:o,class:R(["duration-300 opacity-0 stroke-1 stroke-white",{"!opacity-100":c.value}]),style:S(k(l,!0))},[t("animate",{attributeName:"x2",values:`${e};${i.value[l+1].x}`,dur:"300ms",begin:`${k(l)}ms`,fill:"freeze"},null,8,he),t("animate",{attributeName:"y2",values:`${o};${i.value[l+1].y}`,dur:"300ms",begin:`${k(l)}ms`,fill:"freeze"},null,8,pe)],14,me))),256))]),t("g",null,[(r(!0),u(b,null,w(i.value,({x:e,y:o},l)=>(r(),u("g",{class:R(["duration-300 opacity-0",{"!opacity-100":c.value}]),style:S(k(l,!0))},[t("text",{x:p(l).x,y:p(l).y,class:"text-xs fill-white"},I(g.orderedRequests[l]),9,fe),l===0?(r(),u("g",ge,[t("line",{x1:e-5,x2:e+5,y1:o+5,y2:o-5,class:"stroke-2 stroke-rose-600","stroke-linecap":"round"},null,8,ke),t("line",{x1:e+5,x2:e-5,y1:o+5,y2:o-5,class:"stroke-2 stroke-rose-600","stroke-linecap":"round"},null,8,xe)])):(r(),u("circle",{key:1,r:"3",cx:e,cy:o,class:"stroke-1 fill-rose-500 stroke-rose-600 animate-breathe",style:S(`transform-origin: ${e}px ${o}px`)},null,12,ye))],6))),256))])])),t("div",ve," Total Seek Time: "+I(g.totalSeekTime),1)],64))}},Te={class:"mb-10 space-y-4"},Se={class:"mb-10 space-y-4"},Ae={class:"flex items-end gap-4"},_e={class:"flex flex-col flex-1 gap-2"},Re=["disabled"],qe=["onUpdate:modelValue"],Fe={class:"w-20 mx-auto text-center"},Ce={key:0},C=199,U=0,De={__name:"FirstComeFirstServe",setup(g){const h=_(null),d=P([98,183,37,122,14,124,65,67]),c=_(53),i=P({orderedRequests:null,totalSeekTime:null}),p=_(!1);J([d,c],()=>{p.value=!1});const f=()=>{const s=Math.round(Math.random()*C);d.push(s)},k=s=>{d.splice(s,1)},a=()=>{if(!h.value.checkValidity())return h.value.reportValidity();const{orderedRequests:e,totalSeekTime:o}=ie(c.value,d.slice(),"fcfs");i.orderedRequests=e,i.totalSeekTime=o,p.value=!0};return(s,e)=>(r(),q(te,null,{[D(E).howItWorks.id]:F(()=>[t("div",Te,[e[2]||(e[2]=t("p",null,[n(" The "),t("span",{class:"text-main"},"First Come First Serve (FCFS)"),n(" is a disk scheduling algorithm used to minimize the "),t("span",{class:"text-main"},"seek time"),n(" when responding to incoming disk requests. ")],-1)),e[3]||(e[3]=t("h2",{class:"mt-10 text-xl font-semibold"}," Basic Disk Architecture ",-1)),e[4]||(e[4]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),e[5]||(e[5]=t("p",null,[n(" A "),t("span",{class:"text-main"},"hard disk"),n(" is flat, circular storage device that uses magnetic technology to read or write information from and to it. It is placed on a platter which spins the disk counter-clockwise, allowing different parts of the disk to be accessed. ")],-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/hard-disk.svg",class:"max-w-md",caption:"A Plain Hard Disk"}),e[6]||(e[6]=t("p",null,[n(" The disk is divided into "),t("span",{class:"text-main"},"tracks"),n(" and "),t("span",{class:"text-main"},"disk sectors"),n(", which are both made up of individual "),t("span",{class:"text-main"},"sectors"),n(". Tracks consist of a series of sectors together in a row, while a disk sector is a series of sectors together in a column. ")],-1)),e[7]||(e[7]=t("p",null,[n(" The disk also needs an "),t("span",{class:"text-main"},"actuator arm"),n(" which has a "),t("span",{class:"text-main"},"head"),n(" attached to it. The arm rotates left and right, while the head is used to read or write data from and to the disk. ")],-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/hard-disk-labelled.svg",class:"max-w-lg",caption:"Components of a Hard Disk"}),e[8]||(e[8]=t("p",null,[n(" The actuator arm rotates left and right to move the head to the correct track, and then the disk rotates to the correct sector. The time it takes for the actuator arm to move to the correct track is the "),t("span",{class:"text-main"},"seek time"),n(", while the time it takes for the disk to rotate to the correct sector is the "),t("span",{class:"text-main"},"rotation latency"),n(". ")],-1)),e[9]||(e[9]=t("p",null," Disk scheduling algorithms are only concerned with reducing the seek time rather than rotation latency. This is because the seek time is the variable which can be controlled by the OS, while the rotation latency is determined by the physical characteristics of the disk. ",-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/actuator-arm.svg",class:"max-w-lg",caption:"How the Actuator Arm Moves"}),e[10]||(e[10]=t("p",null," The question then arises, given a set of different tracks which need to be accessed on the disk, what is the best way to meet every request to minimize seek time? The following diagram gives two example paths which could be taken, given 4 tracks which need to be accessed: ",-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/different-possible-paths.svg",class:"max-w-lg",caption:"Two Different Possible Paths That Can Be Taken by the Actuator Arm"}),e[11]||(e[11]=t("h2",{class:"mt-10 text-xl font-semibold"}," First Come First Serve Disk Scheduling ",-1)),e[12]||(e[12]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),e[13]||(e[13]=t("p",null," Given a list of disk requests, the First Come First Serve (FCFS) algorithm goes from point to point in the order of arrival. Although not the most efficient at minimizing seek time, it is quite relatively simple to implement. ",-1)),e[14]||(e[14]=t("p",null,[n(" To visualize this, a "),t("span",{class:"text-main"},"seek time graph"),n(" is used. The following diagram depicts an example of a seek time graph, with the following disk requests: 98, 183, 37, 122, 14, 124, 65, and 67. The current head position is at 53: ")],-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/plotted-points.svg",class:"max-w-2xl",caption:"Plotted Points on a Seek Time Graph"}),e[15]||(e[15]=t("p",null," The X-axis is the track number of the request, while the Y-axis is the order in which the requests are served by the algorithm. To calculate the total seek time, the plotted points are connected and the distance between each point is measured and summed up: ",-1)),x(v,{src:"/algorithms/disk-scheduling/first-come-first-serve/seek-time-graph.svg",class:"",caption:"A Complete Seek Time Graph"}),e[16]||(e[16]=t("p",null," The steeper the line between two points, the lesser the seek time. When calculating the distance between the points, it is important to always subtract the greater value from the smaller one to avoid negative values, as the distance between the two points should be an absolute value. ",-1))])]),[D(E).visualizer.id]:F(()=>[t("div",Se,[e[20]||(e[20]=t("h1",{class:"mb-4 text-xl font-semibold"}," Step By Step Illustration ",-1)),e[21]||(e[21]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),t("form",{class:"space-y-4",ref_key:"form",ref:h},[t("div",Ae,[t("div",_e,[e[17]||(e[17]=t("label",{class:"font-medium"},"Current Head Position:",-1)),z(t("input",{type:"number",class:"field",min:U,max:C,"onUpdate:modelValue":e[0]||(e[0]=o=>c.value=o)},null,512),[[M,c.value]])]),t("button",{type:"button",class:"btn",disabled:d.length===15,onClick:f},"Add Row",8,Re)]),t("table",null,[e[18]||(e[18]=t("thead",null,[t("tr",null,[t("th",null,"Disk Requests"),t("th")])],-1)),t("tbody",null,[(r(!0),u(b,null,w(d,(o,l)=>(r(),u("tr",null,[t("td",null,[z(t("input",{type:"number","onUpdate:modelValue":T=>d[l]=T,min:U,max:C},null,8,qe),[[M,d[l]]])]),t("td",Fe,[d.length>1?(r(),q(se,{key:0,onClick:T=>k(l)},null,8,["onClick"])):Z("",!0)])]))),256))])]),t("button",{type:"submit",class:"btn",onClick:N(a,["prevent"])},"Run Algorithm")],512),e[22]||(e[22]=t("h2",{class:"mt-10 text-xl font-semibold"}," Results ",-1)),e[23]||(e[23]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),p.value?(r(),u("div",Ce,[x(we,{"ordered-requests":i.orderedRequests,"total-seek-time":i.totalSeekTime},null,8,["ordered-requests","total-seek-time"])])):(r(),q(ee,{key:1},{default:F(()=>[e[19]||(e[19]=t("p",{class:"mb-4"}," No results to display yet, try running the algorithm... ",-1)),t("button",{onClick:e[1]||(e[1]=N(()=>a(),["prevent"])),class:"btn"}," Run Algorithm ")]),_:1,__:[19]}))])]),_:2},1024))}};export{De as default};
