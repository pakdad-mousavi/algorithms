const w=(d,g)=>{const n=[...d],t=[];let c;do{const l=[];c=!1;for(let i=0;i<n.length-1;i++){const s={pairStart:i,state:n.slice(),swapped:null},e=g?n[i]>n[i+1]:n[i]<n[i+1];e&&([n[i],n[i+1]]=[n[i+1],n[i]],c=!0),s.swapped=e,l.push(s)}l.push({pairStart:null,state:n.slice(),swapped:null}),t.push(l)}while(c);return t},x=(d,g)=>{const n=[],t=[...d];for(let c=0;c<d.length-1;c++){const l=t.slice(c),i=g?Math.min(...l):Math.max(...l),s=l.indexOf(i)+c,e={oldState:t.slice(),selection:i,selectionIdx:s};[t[c],t[s]]=[t[s],t[c]],e.newState=t.slice(),n.push(e)}return n},M=(d,g)=>{const n=[],t=[...d];for(let c=1;c<t.length;c++){const l=t[c],s=t.slice(0,c).findIndex(u=>g?u>l:u<l),e=t.slice();let r=null;s>-1&&(t.splice(s,0,null),t.splice(c+1,1),r=t.slice(),t[s]=l),n.push({pos:s,oldState:e,intermediateState:r,newState:t.slice(),currentNum:l})}return n},b=(d,g)=>{const n=[],t=[...d],c=Math.ceil(Math.log2(t.length)),l=(s,e)=>{const r=[];let u=0,o=0;for(;u<s.length&&o<e.length;)(g?s[u]<=e[o]:s[u]>=e[o])?(r.push(s[u]),u++):(r.push(e[o]),o++);return r.concat(s.slice(u)).concat(e.slice(o))},i=(s,e)=>{if(s.length<=1)return s;const r=c-e+1,u=Math.ceil(s.length/2),o=s.slice(0,u),a=s.slice(u),p=i(o,e+1),h=i(a,e+1);return n.push({splitDepth:e,left:o.slice(),right:a.slice(),mergeDepth:r,mergedLeft:p.slice(),mergedRight:h.slice()}),l(p,h)};return i(t,1),n},q=(d,g)=>{const n=[...d];let t=1;const c=({id:e,group:r})=>{const u=Math.ceil(r.length/2)-1,o=r[u],a=[],p=[];for(let S=0;S<r.length;S++){if(S===u)continue;const f=r[S];f<o?g?a.push(f):p.push(f):g?p.push(f):a.push(f)}const h=[];return a.length&&h.push({id:t++,group:a}),h.push({id:e,group:[o]}),p.length&&h.push({id:t++,group:p}),h},l=e=>e.map(({id:r,group:u})=>({id:r,group:[...u]}));return(e=>{t=1;const r=[],u=t++;let o=c({id:u,group:e});r.push({before:{id:1,group:e},after:l(o),state:l(o)});const a=o.filter(p=>p.group.length>1).map(p=>p.id);for(;a.length;){const p=a.shift(),h=o.findIndex(m=>m.id===p);if(h===-1||o[h].group.length<=1)continue;const S=l(o)[h],f=c(o[h]);o.splice(h,1,...f);for(const m of f)m.id!==p&&m.group.length>1&&a.push(m.id);r.push({before:S,after:f,state:l(o)})}return r})(n)};export{w as b,M as i,b as m,q,x as s};
