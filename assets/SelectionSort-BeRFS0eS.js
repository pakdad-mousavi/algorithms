import{d as R,c as r,o as n,a as t,l as M,F as w,j as x,t as h,A as z,B,e as i,w as y,u as k,I as U,k as A,D as N,E as D,f as C,G as V,s as P,H as j,z as _,J as v,v as I,y as W}from"./index-D6XtYEjH.js";import{_ as q,a as b,b as E,c as H}from"./EmptySpace-CvGCK4jg.js";import{_ as L}from"./Alert-2X9NswUc.js";import{s as G}from"./sorting-numbers-DK32lHkh.js";const J={xmlns:"http://www.w3.org/2000/svg","xmlns:xlink":"http://www.w3.org/1999/xlink",viewBox:"0 0 24 24"},O=R({name:"ChevronDown",render:function(c,s){return n(),r("svg",J,s[0]||(s[0]=[t("path",{d:"M6 9l6 6l6-6",fill:"none",stroke:"currentColor","stroke-width":"2","stroke-linecap":"round","stroke-linejoin":"round"},null,-1)]))}}),X={class:"space-y-20"},K={class:"max-w-2xl p-4 mx-auto border rounded-md border-zinc-700"},Q={class:"mb-4 text-xl font-medium text-center"},Y={class:"grid grid-flow-col overflow-hidden text-center border border-zinc-400 rounded-xl"},Z={class:"relative mt-2 mb-8 sm:mb-10"},ee={class:"text-center"},te={class:"mx-auto mt-8 text-center"},se={class:"grid grid-flow-col overflow-hidden text-center border border-zinc-400 rounded-xl"},ne={__name:"SelectionSort",props:{log:{type:Array,required:!0},isAscending:{type:Boolean,required:!0}},setup(p){const c=p,s=M(()=>{var a,u;return(u=(a=c.log[0])==null?void 0:a.oldState)==null?void 0:u.length}),d=1/(s.value*2)*100,g=d*2,S=(a,u)=>{const l=[];for(let e=0;e<s.value;e++)l.push(d+g*e);return l.slice(a)[u]},f=a=>100-g-g*a;return(a,u)=>(n(),r("div",X,[(n(!0),r(w,null,x(p.log,(l,o)=>(n(),r("div",K,[t("h2",Q,"Pass #"+h(o+1),1),t("div",Y,[(n(!0),r(w,null,x(l.oldState,(e,m)=>(n(),r("div",{class:z(["flex items-center justify-center py-2 border-r last:border-r-0 border-zinc-400",{"bg-emerald-600":l.selectionIdx===m}])},h(e),3))),256))]),t("div",Z,[(n(!0),r(w,null,x(s.value-o,e=>(n(),r("div",{class:"absolute h-4 border-r-2 sm:h-6 border-zinc-400",style:B(`left: ${S(o,e-1)}%`)},null,4))),256)),t("div",{class:"absolute right-[calc(10%-2px)] border-b-2 border-zinc-400 top-4 sm:top-6",style:B(`right: calc(${d}% - 2px); width: calc(${f(o)}% + 2px)`)},null,4)]),t("p",ee,"The "+h(p.isAscending?"smallest":"largest")+" number is "+h(l.selection),1),t("div",te,[u[0]||(u[0]=t("div",{class:"w-1 h-8 mx-auto rounded-full sm:h-16 bg-zinc-300"},null,-1)),i(k(U),{size:"40",class:"-translate-y-6"},{default:y(()=>[i(k(O))]),_:1})]),t("div",se,[(n(!0),r(w,null,x(l.newState,(e,m)=>(n(),r("div",{class:z(["flex items-center justify-center py-2 border-r last:border-r-0 border-zinc-400",{"bg-emerald-600":o===m}])},h(e),3))),256))])]))),256))]))}},oe={class:"mb-10 space-y-4"},re={class:"mb-10 space-y-4"},le={class:"flex items-end gap-4"},ie={class:"flex flex-col flex-1 gap-2"},ae=["disabled"],ue=["onUpdate:modelValue"],de={class:"w-20 mx-auto text-center"},me={key:0},F=100,fe={__name:"SelectionSort",setup(p){const c=A(null),s=N([5,1,4,2,8]),d=A("ascending"),g=M(()=>d.value==="ascending"),S=N({log:null}),f=A(!1);D([s,d],()=>{f.value=!1});const a=()=>{const o=Math.round(Math.random()*F);s.push(o)},u=o=>{s.splice(o,1)},l=()=>{if(!c.value.checkValidity())return c.value.reportValidity();const e=G(s,g.value);S.log=e,f.value=!0};return(o,e)=>(n(),C(E,null,{[k(V).howItWorks.id]:y(()=>[t("div",oe,[e[6]||(e[6]=t("p",null,[t("span",{class:"text-main"},"Selection Sort"),v(" is a sorting algorithm used to sort a series of numbers in order, either from smallest to largest (ascending order), or from largest to smallest (descending order). ")],-1)),t("p",null,[e[3]||(e[3]=v(" To learn more about how the sorting problem, see ")),t("span",{class:"cursor-pointer text-main",onClick:e[0]||(e[0]=m=>o.$router.push("/sorting-numbers/bubble-sort"))},"Bubble Sort"),e[4]||(e[4]=v(". "))]),e[7]||(e[7]=t("h2",{class:"mt-10 text-xl font-semibold"}," How Selection Sort Works ",-1)),e[8]||(e[8]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),e[9]||(e[9]=t("p",null,[v(" Unlike "),t("span",{class:"text-main"},"bubble sort"),v(", selection sort works by repeatedly finding the smallest number in the list of numbers and swapping it with the number in front of the previously swapped number at the beginning of the list. ")],-1)),e[10]||(e[10]=t("p",null," Consider the following list of numbers: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/unsorted-numbers.svg",class:"max-w-xs",caption:"A Series of Unsorted Numbers"}),e[11]||(e[11]=t("p",null," First, the algorithm will find the smallest number in the list. After doing so, it will swap it with the first number in the list. This is the first pass of the algorithm over the numbers: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/selection-sort-pass-1.svg",class:"max-w-xs",caption:"The First Pass of Selection Sort"}),e[12]||(e[12]=t("p",null," The algorithm then begins its second pass over the numbers. This time, it only scans from the second number onwards, and finds the smallest number, since the first number is in the correct place. ",-1)),e[13]||(e[13]=t("p",null," After finding the smallest number, it swaps it with the number in from of the previously swapped number: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/selection-sort-pass-2.svg",class:"max-w-xs",caption:"The Second Pass of Selection Sort"}),e[14]||(e[14]=t("p",null," The same process is repeated for the third pass: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/selection-sort-pass-3.svg",class:"max-w-xs",caption:"The Third Pass of Selection Sort"}),e[15]||(e[15]=t("p",null," As well as for the fourth pass: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/selection-sort-pass-4.svg",class:"max-w-xs",caption:"The Final Pass of Selection Sort"}),e[16]||(e[16]=t("p",null," By repeatedly finding the smallest number from the unsorted portion of the list and moving them to the beginning, we have sucessfully sorted the list! ",-1)),i(L,{"alert-style":"note"},{default:y(()=>e[5]||(e[5]=[t("p",null,' Selection sort makes much less swaps than bubble sort, however, given a list of "n" elements, it has to make n - 1 passes through the list in order to ensure it is fully sorted; unlike bubble sort, it cannot stop early. ',-1)])),_:1,__:[5]}),e[17]||(e[17]=t("p",null," Below is the final sorted version of the unsorted numbers: ",-1)),i(b,{src:"/algorithms/sorting-numbers/selection-sort/sorted-numbers.svg",class:"max-w-xs",caption:"Sorted Numbers"}),e[18]||(e[18]=t("p",null," To sort the list in descending order, the exact same process is repeated, with the exception that instead of finding the smallest number, the largest number is found. ",-1))])]),[k(V).visualizer.id]:y(()=>[t("div",re,[e[23]||(e[23]=t("h1",{class:"mb-4 text-xl font-semibold"}," Step By Step Illustration ",-1)),e[24]||(e[24]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),t("form",{class:"space-y-4",ref_key:"form",ref:c},[t("div",le,[t("div",ie,[e[20]||(e[20]=t("label",{class:"font-medium"},"Ascending / Descending:",-1)),P(t("select",{class:"field","onUpdate:modelValue":e[1]||(e[1]=m=>d.value=m)},e[19]||(e[19]=[t("option",{value:"ascending"},"Ascending",-1),t("option",{value:"descending"},"Descending",-1)]),512),[[j,d.value]])]),t("button",{type:"button",class:"btn",disabled:s.length===8,onClick:a},"Add Row",8,ae)]),t("table",null,[e[21]||(e[21]=t("thead",null,[t("tr",null,[t("th",null,"Numbers to Sort"),t("th")])],-1)),t("tbody",null,[(n(!0),r(w,null,x(s,(m,$)=>(n(),r("tr",null,[t("td",null,[P(t("input",{type:"number","onUpdate:modelValue":T=>s[$]=T,min:"1",max:F},null,8,ue),[[I,s[$]]])]),t("td",de,[s.length>1?(n(),C(H,{key:0,onClick:T=>u($)},null,8,["onClick"])):W("",!0)])]))),256))])]),t("button",{type:"submit",class:"btn",onClick:_(l,["prevent"])},"Run Algorithm")],512),e[25]||(e[25]=t("h2",{class:"mt-10 text-xl font-semibold"}," Results ",-1)),e[26]||(e[26]=t("hr",{class:"mb-4 border-neutral-800"},null,-1)),f.value?(n(),r("div",me,[i(ne,{log:S.log},null,8,["log"])])):(n(),C(q,{key:1},{default:y(()=>[e[22]||(e[22]=t("p",{class:"mb-4"}," No results to display yet, try running the algorithm... ",-1)),t("button",{onClick:e[2]||(e[2]=_(()=>l(),["prevent"])),class:"btn"}," Run Algorithm ")]),_:1,__:[22]}))])]),_:2},1024))}};export{fe as default};
