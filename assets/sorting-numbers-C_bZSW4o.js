const w=(h,g)=>{const s=[...h],t=[];let c;do{const r=[];c=!1;for(let i=0;i<s.length-1;i++){const n={pairStart:i,state:s.slice(),swapped:null},e=g?s[i]>s[i+1]:s[i]<s[i+1];e&&([s[i],s[i+1]]=[s[i+1],s[i]],c=!0),n.swapped=e,r.push(n)}r.push({pairStart:null,state:s.slice(),swapped:null}),t.push(r)}while(c);return t},x=(h,g)=>{const s=[],t=[...h];for(let c=0;c<h.length-1;c++){const r=t.slice(c),i=g?Math.min(...r):Math.max(...r),n=r.indexOf(i)+c,e={oldState:t.slice(),selection:i,selectionIdx:n};[t[c],t[n]]=[t[n],t[c]],e.newState=t.slice(),s.push(e)}return s},y=(h,g)=>{const s=[],t=[...h];for(let c=1;c<t.length;c++){const r=t[c],n=t.slice(0,c).findIndex(l=>g?l>r:l<r),e=t.slice();let u=null;n>-1&&(t.splice(n,0,null),t.splice(c+1,1),u=t.slice(),t[n]=r),s.push({pos:n,oldState:e,intermediateState:u,newState:t.slice(),currentNum:r})}return s},A=(h,g)=>{const s=[],t=[...h],c=Math.ceil(Math.log2(t.length)),r=(n,e)=>{const u=[];let l=0,o=0;for(;l<n.length&&o<e.length;)(g?n[l]<=e[o]:n[l]>=e[o])?(u.push(n[l]),l++):(u.push(e[o]),o++);return u.concat(n.slice(l)).concat(e.slice(o))},i=(n,e)=>{if(n.length<=1)return n;const u=c-e+1,l=Math.ceil(n.length/2),o=n.slice(0,l),a=n.slice(l),p=i(o,e+1),d=i(a,e+1);return s.push({splitDepth:e,left:o.slice(),right:a.slice(),mergeDepth:u,mergedLeft:p.slice(),mergedRight:d.slice()}),r(p,d)};return i(t,1),s},M=(h,g)=>{const s=[...h];let t=1;const c=({id:e,group:u})=>{const l=Math.ceil(u.length/2)-1,o=u[l],a=[],p=[];for(let m=0;m<u.length;m++){if(m===l)continue;const f=u[m];f<o?g?a.push(f):p.push(f):g?p.push(f):a.push(f)}const d=[];return a.length&&d.push({id:t++,group:a}),d.push({id:e,group:[o]}),p.length&&d.push({id:t++,group:p}),d},r=e=>e.map(({id:u,group:l})=>({id:u,group:[...l]}));return(e=>{t=1;const u=[],l=t++;let o=c({id:l,group:e});u.push({before:{id:1,group:e},after:r(o),state:r(o)});const a=o.filter(p=>p.group.length>1).map(p=>p.id);for(;a.length;){const p=a.shift(),d=o.findIndex(S=>S.id===p);if(d===-1||o[d].group.length<=1)continue;const m=r(o)[d],f=c(o[d]);o.splice(d,1,...f);for(const S of f)S.id!==p&&S.group.length>1&&a.push(S.id);u.push({before:m,after:f,state:r(o)})}return u})(s)},v=(h,g=!0)=>{const s=Math.min(...h),t=Math.max(...h),c={range:t-s+1,counts:[],reconstructedArrays:[]},r=new Array(t-s+1).fill(0);for(const e of h)r[e-s]++;c.counts=r;const i=[],n=g?[...Array(r.length).keys()]:[...Array(r.length).keys()].reverse();for(const e of n){const u=e+s,l=r[e];if(l===0)continue;for(let a=0;a<l;a++)i.push(u);const o=i.slice();for(;o.length<h.length;)o.push(null);c.reconstructedArrays.push(o)}return c};export{w as b,v as c,y as i,A as m,M as q,x as s};
